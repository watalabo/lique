<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="6272128"><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next (90,529 samples, 1.44%)</title><rect x="0.0000%" y="773" width="1.4434%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="90529"/><text x="0.2500%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (90,529 samples, 1.44%)</title><rect x="0.0000%" y="757" width="1.4434%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="90529"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (90,529 samples, 1.44%)</title><rect x="0.0000%" y="741" width="1.4434%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="90529"/><text x="0.2500%" y="751.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (90,877 samples, 1.45%)</title><rect x="1.4434%" y="773" width="1.4489%" height="15" fill="rgb(248,212,6)" fg:x="90529" fg:w="90877"/><text x="1.6934%" y="783.50"></text></g><g><title>__GI___libc_malloc (89,935 samples, 1.43%)</title><rect x="2.8923%" y="773" width="1.4339%" height="15" fill="rgb(208,68,35)" fg:x="181406" fg:w="89935"/><text x="3.1423%" y="783.50"></text></g><g><title>[[stack]] (362,369 samples, 5.78%)</title><rect x="0.0000%" y="789" width="5.7774%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="362369"/><text x="0.2500%" y="799.50">[[stack..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (91,028 samples, 1.45%)</title><rect x="4.3261%" y="773" width="1.4513%" height="15" fill="rgb(207,160,47)" fg:x="271341" fg:w="91028"/><text x="4.5761%" y="783.50"></text></g><g><title>&lt;rowan::cursor::Preorder as core::iter::traits::iterator::Iterator&gt;::next (89,116 samples, 1.42%)</title><rect x="5.7774%" y="773" width="1.4208%" height="15" fill="rgb(228,23,34)" fg:x="362369" fg:w="89116"/><text x="6.0274%" y="783.50"></text></g><g><title>_int_free (89,825 samples, 1.43%)</title><rect x="7.1983%" y="773" width="1.4321%" height="15" fill="rgb(218,30,26)" fg:x="451485" fg:w="89825"/><text x="7.4483%" y="783.50"></text></g><g><title>[lique_linter] (264,982 samples, 4.22%)</title><rect x="5.7774%" y="789" width="4.2248%" height="15" fill="rgb(220,122,19)" fg:x="362369" fg:w="264982"/><text x="6.0274%" y="799.50">[liqu..</text></g><g><title>yansi::style::Style::fmt_prefix (86,041 samples, 1.37%)</title><rect x="8.6304%" y="773" width="1.3718%" height="15" fill="rgb(250,228,42)" fg:x="541310" fg:w="86041"/><text x="8.8804%" y="783.50"></text></g><g><title>[unknown] (80,389 samples, 1.28%)</title><rect x="10.0022%" y="789" width="1.2817%" height="15" fill="rgb(240,193,28)" fg:x="627351" fg:w="80389"/><text x="10.2522%" y="799.50"></text></g><g><title>__GI___libc_write (80,389 samples, 1.28%)</title><rect x="10.0022%" y="773" width="1.2817%" height="15" fill="rgb(216,20,37)" fg:x="627351" fg:w="80389"/><text x="10.2522%" y="783.50"></text></g><g><title>_dl_start_user (87,786 samples, 1.40%)</title><rect x="11.2839%" y="789" width="1.3996%" height="15" fill="rgb(206,188,39)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="799.50"></text></g><g><title>_dl_init (87,786 samples, 1.40%)</title><rect x="11.2839%" y="773" width="1.3996%" height="15" fill="rgb(217,207,13)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="783.50"></text></g><g><title>call_init (87,786 samples, 1.40%)</title><rect x="11.2839%" y="757" width="1.3996%" height="15" fill="rgb(231,73,38)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="767.50"></text></g><g><title>call_init (87,786 samples, 1.40%)</title><rect x="11.2839%" y="741" width="1.3996%" height="15" fill="rgb(225,20,46)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="751.50"></text></g><g><title>__init_misc (87,786 samples, 1.40%)</title><rect x="11.2839%" y="725" width="1.3996%" height="15" fill="rgb(210,31,41)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="735.50"></text></g><g><title>asm_exc_page_fault (87,786 samples, 1.40%)</title><rect x="11.2839%" y="709" width="1.3996%" height="15" fill="rgb(221,200,47)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="719.50"></text></g><g><title>exc_page_fault (87,786 samples, 1.40%)</title><rect x="11.2839%" y="693" width="1.3996%" height="15" fill="rgb(226,26,5)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="703.50"></text></g><g><title>do_user_addr_fault (87,786 samples, 1.40%)</title><rect x="11.2839%" y="677" width="1.3996%" height="15" fill="rgb(249,33,26)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="687.50"></text></g><g><title>mem_cgroup_from_task (87,786 samples, 1.40%)</title><rect x="11.2839%" y="661" width="1.3996%" height="15" fill="rgb(235,183,28)" fg:x="707740" fg:w="87786"/><text x="11.5339%" y="671.50"></text></g><g><title>__GI_exit (82,099 samples, 1.31%)</title><rect x="12.6835%" y="741" width="1.3089%" height="15" fill="rgb(221,5,38)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="751.50"></text></g><g><title>__run_exit_handlers (82,099 samples, 1.31%)</title><rect x="12.6835%" y="725" width="1.3089%" height="15" fill="rgb(247,18,42)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="735.50"></text></g><g><title>__GI__exit (82,099 samples, 1.31%)</title><rect x="12.6835%" y="709" width="1.3089%" height="15" fill="rgb(241,131,45)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82,099 samples, 1.31%)</title><rect x="12.6835%" y="693" width="1.3089%" height="15" fill="rgb(249,31,29)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="703.50"></text></g><g><title>do_syscall_64 (82,099 samples, 1.31%)</title><rect x="12.6835%" y="677" width="1.3089%" height="15" fill="rgb(225,111,53)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="687.50"></text></g><g><title>x64_sys_call (82,099 samples, 1.31%)</title><rect x="12.6835%" y="661" width="1.3089%" height="15" fill="rgb(238,160,17)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="671.50"></text></g><g><title>__x64_sys_exit_group (82,099 samples, 1.31%)</title><rect x="12.6835%" y="645" width="1.3089%" height="15" fill="rgb(214,148,48)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="655.50"></text></g><g><title>do_group_exit (82,099 samples, 1.31%)</title><rect x="12.6835%" y="629" width="1.3089%" height="15" fill="rgb(232,36,49)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="639.50"></text></g><g><title>do_exit (82,099 samples, 1.31%)</title><rect x="12.6835%" y="613" width="1.3089%" height="15" fill="rgb(209,103,24)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="623.50"></text></g><g><title>exit_signals (82,099 samples, 1.31%)</title><rect x="12.6835%" y="597" width="1.3089%" height="15" fill="rgb(229,88,8)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="607.50"></text></g><g><title>sched_mm_cid_before_execve (82,099 samples, 1.31%)</title><rect x="12.6835%" y="581" width="1.3089%" height="15" fill="rgb(213,181,19)" fg:x="795526" fg:w="82099"/><text x="12.9335%" y="591.50"></text></g><g><title>_IO_new_fopen (82,885 samples, 1.32%)</title><rect x="13.9925%" y="693" width="1.3215%" height="15" fill="rgb(254,191,54)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="703.50"></text></g><g><title>__fopen_internal (82,885 samples, 1.32%)</title><rect x="13.9925%" y="677" width="1.3215%" height="15" fill="rgb(241,83,37)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="687.50"></text></g><g><title>_IO_new_file_fopen (82,885 samples, 1.32%)</title><rect x="13.9925%" y="661" width="1.3215%" height="15" fill="rgb(233,36,39)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="671.50"></text></g><g><title>__GI__IO_file_open (82,885 samples, 1.32%)</title><rect x="13.9925%" y="645" width="1.3215%" height="15" fill="rgb(226,3,54)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="655.50"></text></g><g><title>__GI___open64_nocancel (82,885 samples, 1.32%)</title><rect x="13.9925%" y="629" width="1.3215%" height="15" fill="rgb(245,192,40)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82,885 samples, 1.32%)</title><rect x="13.9925%" y="613" width="1.3215%" height="15" fill="rgb(238,167,29)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="623.50"></text></g><g><title>do_syscall_64 (82,885 samples, 1.32%)</title><rect x="13.9925%" y="597" width="1.3215%" height="15" fill="rgb(232,182,51)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (82,885 samples, 1.32%)</title><rect x="13.9925%" y="581" width="1.3215%" height="15" fill="rgb(231,60,39)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="591.50"></text></g><g><title>task_work_run (82,885 samples, 1.32%)</title><rect x="13.9925%" y="565" width="1.3215%" height="15" fill="rgb(208,69,12)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="575.50"></text></g><g><title>_raw_spin_lock_irq (82,885 samples, 1.32%)</title><rect x="13.9925%" y="549" width="1.3215%" height="15" fill="rgb(235,93,37)" fg:x="877625" fg:w="82885"/><text x="14.2425%" y="559.50"></text></g><g><title>__pthread_getattr_np (165,792 samples, 2.64%)</title><rect x="13.9925%" y="709" width="2.6433%" height="15" fill="rgb(213,116,39)" fg:x="877625" fg:w="165792"/><text x="14.2425%" y="719.50">__..</text></g><g><title>__GI___isoc99_sscanf (82,907 samples, 1.32%)</title><rect x="15.3139%" y="693" width="1.3218%" height="15" fill="rgb(222,207,29)" fg:x="960510" fg:w="82907"/><text x="15.5639%" y="703.50"></text></g><g><title>__vfscanf_internal (82,907 samples, 1.32%)</title><rect x="15.3139%" y="677" width="1.3218%" height="15" fill="rgb(206,96,30)" fg:x="960510" fg:w="82907"/><text x="15.5639%" y="687.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (89,860 samples, 1.43%)</title><rect x="16.6358%" y="645" width="1.4327%" height="15" fill="rgb(218,138,4)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="655.50"></text></g><g><title>&lt;rowan::cursor::SyntaxNode as core::fmt::Display&gt;::fmt (89,860 samples, 1.43%)</title><rect x="16.6358%" y="629" width="1.4327%" height="15" fill="rgb(250,191,14)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (89,860 samples, 1.43%)</title><rect x="16.6358%" y="613" width="1.4327%" height="15" fill="rgb(239,60,40)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (89,860 samples, 1.43%)</title><rect x="16.6358%" y="597" width="1.4327%" height="15" fill="rgb(206,27,48)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89,860 samples, 1.43%)</title><rect x="16.6358%" y="581" width="1.4327%" height="15" fill="rgb(225,35,8)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="591.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next (89,860 samples, 1.43%)</title><rect x="16.6358%" y="565" width="1.4327%" height="15" fill="rgb(250,213,24)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (89,860 samples, 1.43%)</title><rect x="16.6358%" y="549" width="1.4327%" height="15" fill="rgb(247,123,22)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="559.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (89,860 samples, 1.43%)</title><rect x="16.6358%" y="533" width="1.4327%" height="15" fill="rgb(231,138,38)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="543.50"></text></g><g><title>&lt;rowan::cursor::PreorderWithTokens as core::iter::traits::iterator::Iterator&gt;::next (89,860 samples, 1.43%)</title><rect x="16.6358%" y="517" width="1.4327%" height="15" fill="rgb(231,145,46)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="527.50"></text></g><g><title>rowan::cursor::NodeData::next_sibling_or_token (89,860 samples, 1.43%)</title><rect x="16.6358%" y="501" width="1.4327%" height="15" fill="rgb(251,118,11)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="511.50"></text></g><g><title>rowan::cursor::NodeData::green_siblings (89,860 samples, 1.43%)</title><rect x="16.6358%" y="485" width="1.4327%" height="15" fill="rgb(217,147,25)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="495.50"></text></g><g><title>rowan::green::node::GreenNodeData::children (89,860 samples, 1.43%)</title><rect x="16.6358%" y="469" width="1.4327%" height="15" fill="rgb(247,81,37)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="479.50"></text></g><g><title>rowan::green::node::GreenNodeData::slice (89,860 samples, 1.43%)</title><rect x="16.6358%" y="453" width="1.4327%" height="15" fill="rgb(209,12,38)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="463.50"></text></g><g><title>&lt;rowan::arc::HeaderSlice&lt;H,[T: 0]&gt; as core::ops::deref::Deref&gt;::deref (89,860 samples, 1.43%)</title><rect x="16.6358%" y="437" width="1.4327%" height="15" fill="rgb(227,1,9)" fg:x="1043417" fg:w="89860"/><text x="16.8858%" y="447.50"></text></g><g><title>&lt;lique_linter::Command as clap_builder::derive::CommandFactory&gt;::command (84,521 samples, 1.35%)</title><rect x="18.0685%" y="629" width="1.3476%" height="15" fill="rgb(248,47,43)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="639.50"></text></g><g><title>&lt;lique_linter::Command as clap_builder::derive::Args&gt;::augment_args (84,521 samples, 1.35%)</title><rect x="18.0685%" y="613" width="1.3476%" height="15" fill="rgb(221,10,30)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="623.50"></text></g><g><title>clap_builder::builder::command::Command::arg (84,521 samples, 1.35%)</title><rect x="18.0685%" y="597" width="1.3476%" height="15" fill="rgb(210,229,1)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="607.50"></text></g><g><title>clap_builder::builder::command::Command::arg_internal (84,521 samples, 1.35%)</title><rect x="18.0685%" y="581" width="1.3476%" height="15" fill="rgb(222,148,37)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="591.50"></text></g><g><title>asm_exc_page_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="565" width="1.3476%" height="15" fill="rgb(234,67,33)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="575.50"></text></g><g><title>exc_page_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="549" width="1.3476%" height="15" fill="rgb(247,98,35)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="559.50"></text></g><g><title>do_user_addr_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="533" width="1.3476%" height="15" fill="rgb(247,138,52)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="543.50"></text></g><g><title>handle_mm_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="517" width="1.3476%" height="15" fill="rgb(213,79,30)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="527.50"></text></g><g><title>__handle_mm_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="501" width="1.3476%" height="15" fill="rgb(246,177,23)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="511.50"></text></g><g><title>handle_pte_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="485" width="1.3476%" height="15" fill="rgb(230,62,27)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="495.50"></text></g><g><title>do_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="469" width="1.3476%" height="15" fill="rgb(216,154,8)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="479.50"></text></g><g><title>do_read_fault (84,521 samples, 1.35%)</title><rect x="18.0685%" y="453" width="1.3476%" height="15" fill="rgb(244,35,45)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="463.50"></text></g><g><title>filemap_map_pages (84,521 samples, 1.35%)</title><rect x="18.0685%" y="437" width="1.3476%" height="15" fill="rgb(251,115,12)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="447.50"></text></g><g><title>set_pte_range (84,521 samples, 1.35%)</title><rect x="18.0685%" y="421" width="1.3476%" height="15" fill="rgb(240,54,50)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="431.50"></text></g><g><title>folio_add_file_rmap_ptes (84,521 samples, 1.35%)</title><rect x="18.0685%" y="405" width="1.3476%" height="15" fill="rgb(233,84,52)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="415.50"></text></g><g><title>__lruvec_stat_mod_folio (84,521 samples, 1.35%)</title><rect x="18.0685%" y="389" width="1.3476%" height="15" fill="rgb(207,117,47)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="399.50"></text></g><g><title>__mod_lruvec_state (84,521 samples, 1.35%)</title><rect x="18.0685%" y="373" width="1.3476%" height="15" fill="rgb(249,43,39)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (84,521 samples, 1.35%)</title><rect x="18.0685%" y="357" width="1.3476%" height="15" fill="rgb(209,38,44)" fg:x="1133277" fg:w="84521"/><text x="18.3185%" y="367.50"></text></g><g><title>clap_builder::derive::Parser::parse (170,334 samples, 2.72%)</title><rect x="18.0685%" y="645" width="2.7157%" height="15" fill="rgb(236,212,23)" fg:x="1133277" fg:w="170334"/><text x="18.3185%" y="655.50">cl..</text></g><g><title>clap_builder::builder::command::Command::get_matches (85,813 samples, 1.37%)</title><rect x="19.4160%" y="629" width="1.3682%" height="15" fill="rgb(242,79,21)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="639.50"></text></g><g><title>clap_builder::builder::command::Command::get_matches_from (85,813 samples, 1.37%)</title><rect x="19.4160%" y="613" width="1.3682%" height="15" fill="rgb(211,96,35)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (85,813 samples, 1.37%)</title><rect x="19.4160%" y="597" width="1.3682%" height="15" fill="rgb(253,215,40)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt;::{{closure}}&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="581" width="1.3682%" height="15" fill="rgb(211,81,21)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap_builder::builder::command::Command&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="565" width="1.3682%" height="15" fill="rgb(208,190,38)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;clap_builder::mkeymap::MKeyMap&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="549" width="1.3682%" height="15" fill="rgb(235,213,38)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;clap_builder::builder::arg::Arg&gt;&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="533" width="1.3682%" height="15" fill="rgb(237,122,38)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85,813 samples, 1.37%)</title><rect x="19.4160%" y="517" width="1.3682%" height="15" fill="rgb(244,218,35)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[clap_builder::builder::arg::Arg]&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="501" width="1.3682%" height="15" fill="rgb(240,68,47)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;clap_builder::util::any_value::AnyValue&gt;&gt; (85,813 samples, 1.37%)</title><rect x="19.4160%" y="485" width="1.3682%" height="15" fill="rgb(210,16,53)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="495.50"></text></g><g><title>asm_exc_page_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="469" width="1.3682%" height="15" fill="rgb(235,124,12)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="479.50"></text></g><g><title>exc_page_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="453" width="1.3682%" height="15" fill="rgb(224,169,11)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="463.50"></text></g><g><title>do_user_addr_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="437" width="1.3682%" height="15" fill="rgb(250,166,2)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="447.50"></text></g><g><title>handle_mm_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="421" width="1.3682%" height="15" fill="rgb(242,216,29)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="431.50"></text></g><g><title>__handle_mm_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="405" width="1.3682%" height="15" fill="rgb(230,116,27)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="415.50"></text></g><g><title>handle_pte_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="389" width="1.3682%" height="15" fill="rgb(228,99,48)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="399.50"></text></g><g><title>do_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="373" width="1.3682%" height="15" fill="rgb(253,11,6)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="383.50"></text></g><g><title>do_read_fault (85,813 samples, 1.37%)</title><rect x="19.4160%" y="357" width="1.3682%" height="15" fill="rgb(247,143,39)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="367.50"></text></g><g><title>filemap_map_pages (85,813 samples, 1.37%)</title><rect x="19.4160%" y="341" width="1.3682%" height="15" fill="rgb(236,97,10)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="351.50"></text></g><g><title>set_pte_range (85,813 samples, 1.37%)</title><rect x="19.4160%" y="325" width="1.3682%" height="15" fill="rgb(233,208,19)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="335.50"></text></g><g><title>folio_add_file_rmap_ptes (85,813 samples, 1.37%)</title><rect x="19.4160%" y="309" width="1.3682%" height="15" fill="rgb(216,164,2)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="319.50"></text></g><g><title>__lruvec_stat_mod_folio (85,813 samples, 1.37%)</title><rect x="19.4160%" y="293" width="1.3682%" height="15" fill="rgb(220,129,5)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="303.50"></text></g><g><title>__mod_lruvec_state (85,813 samples, 1.37%)</title><rect x="19.4160%" y="277" width="1.3682%" height="15" fill="rgb(242,17,10)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (85,813 samples, 1.37%)</title><rect x="19.4160%" y="261" width="1.3682%" height="15" fill="rgb(242,107,0)" fg:x="1217798" fg:w="85813"/><text x="19.6660%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (90,207 samples, 1.44%)</title><rect x="20.7842%" y="565" width="1.4382%" height="15" fill="rgb(251,28,31)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (90,207 samples, 1.44%)</title><rect x="20.7842%" y="549" width="1.4382%" height="15" fill="rgb(233,223,10)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,207 samples, 1.44%)</title><rect x="20.7842%" y="533" width="1.4382%" height="15" fill="rgb(215,21,27)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,207 samples, 1.44%)</title><rect x="20.7842%" y="517" width="1.4382%" height="15" fill="rgb(232,23,21)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,207 samples, 1.44%)</title><rect x="20.7842%" y="501" width="1.4382%" height="15" fill="rgb(244,5,23)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (90,207 samples, 1.44%)</title><rect x="20.7842%" y="485" width="1.4382%" height="15" fill="rgb(226,81,46)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,207 samples, 1.44%)</title><rect x="20.7842%" y="469" width="1.4382%" height="15" fill="rgb(247,70,30)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (90,207 samples, 1.44%)</title><rect x="20.7842%" y="453" width="1.4382%" height="15" fill="rgb(212,68,19)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (90,207 samples, 1.44%)</title><rect x="20.7842%" y="437" width="1.4382%" height="15" fill="rgb(240,187,13)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="447.50"></text></g><g><title>lique_core::run_lints::_{{closure}} (90,207 samples, 1.44%)</title><rect x="20.7842%" y="421" width="1.4382%" height="15" fill="rgb(223,113,26)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="431.50"></text></g><g><title>lique_core::rule::Rule::lint (90,207 samples, 1.44%)</title><rect x="20.7842%" y="405" width="1.4382%" height="15" fill="rgb(206,192,2)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="415.50"></text></g><g><title>lique_core::lints::oversized_circuit::lint_oversized_circuit (90,207 samples, 1.44%)</title><rect x="20.7842%" y="389" width="1.4382%" height="15" fill="rgb(241,108,4)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="399.50"></text></g><g><title>lique_core::lints::count_qubits (90,207 samples, 1.44%)</title><rect x="20.7842%" y="373" width="1.4382%" height="15" fill="rgb(247,173,49)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;oq3_syntax::ast::generated::nodes::Stmt&gt; (90,207 samples, 1.44%)</title><rect x="20.7842%" y="357" width="1.4382%" height="15" fill="rgb(224,114,35)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="367.50"></text></g><g><title>rowan::cursor::free (90,207 samples, 1.44%)</title><rect x="20.7842%" y="341" width="1.4382%" height="15" fill="rgb(245,159,27)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::cursor::NodeData&gt;&gt; (90,207 samples, 1.44%)</title><rect x="20.7842%" y="325" width="1.4382%" height="15" fill="rgb(245,172,44)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90,207 samples, 1.44%)</title><rect x="20.7842%" y="309" width="1.4382%" height="15" fill="rgb(236,23,11)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (90,207 samples, 1.44%)</title><rect x="20.7842%" y="293" width="1.4382%" height="15" fill="rgb(205,117,38)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (90,207 samples, 1.44%)</title><rect x="20.7842%" y="277" width="1.4382%" height="15" fill="rgb(237,72,25)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="287.50"></text></g><g><title>__GI___libc_free (90,207 samples, 1.44%)</title><rect x="20.7842%" y="261" width="1.4382%" height="15" fill="rgb(244,70,9)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="271.50"></text></g><g><title>_int_free (90,207 samples, 1.44%)</title><rect x="20.7842%" y="245" width="1.4382%" height="15" fill="rgb(217,125,39)" fg:x="1303611" fg:w="90207"/><text x="21.0342%" y="255.50"></text></g><g><title>lique_core::run_lints (180,073 samples, 2.87%)</title><rect x="20.7842%" y="645" width="2.8710%" height="15" fill="rgb(235,36,10)" fg:x="1303611" fg:w="180073"/><text x="21.0342%" y="655.50">li..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (180,073 samples, 2.87%)</title><rect x="20.7842%" y="629" width="2.8710%" height="15" fill="rgb(251,123,47)" fg:x="1303611" fg:w="180073"/><text x="21.0342%" y="639.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (180,073 samples, 2.87%)</title><rect x="20.7842%" y="613" width="2.8710%" height="15" fill="rgb(221,13,13)" fg:x="1303611" fg:w="180073"/><text x="21.0342%" y="623.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (180,073 samples, 2.87%)</title><rect x="20.7842%" y="597" width="2.8710%" height="15" fill="rgb(238,131,9)" fg:x="1303611" fg:w="180073"/><text x="21.0342%" y="607.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (180,073 samples, 2.87%)</title><rect x="20.7842%" y="581" width="2.8710%" height="15" fill="rgb(211,50,8)" fg:x="1303611" fg:w="180073"/><text x="21.0342%" y="591.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,866 samples, 1.43%)</title><rect x="22.2224%" y="565" width="1.4328%" height="15" fill="rgb(245,182,24)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,866 samples, 1.43%)</title><rect x="22.2224%" y="549" width="1.4328%" height="15" fill="rgb(242,14,37)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,866 samples, 1.43%)</title><rect x="22.2224%" y="533" width="1.4328%" height="15" fill="rgb(246,228,12)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (89,866 samples, 1.43%)</title><rect x="22.2224%" y="517" width="1.4328%" height="15" fill="rgb(213,55,15)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,866 samples, 1.43%)</title><rect x="22.2224%" y="501" width="1.4328%" height="15" fill="rgb(209,9,3)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (89,866 samples, 1.43%)</title><rect x="22.2224%" y="485" width="1.4328%" height="15" fill="rgb(230,59,30)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (89,866 samples, 1.43%)</title><rect x="22.2224%" y="469" width="1.4328%" height="15" fill="rgb(209,121,21)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="479.50"></text></g><g><title>lique_core::run_lints::_{{closure}} (89,866 samples, 1.43%)</title><rect x="22.2224%" y="453" width="1.4328%" height="15" fill="rgb(220,109,13)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="463.50"></text></g><g><title>lique_core::rule::Rule::lint (89,866 samples, 1.43%)</title><rect x="22.2224%" y="437" width="1.4328%" height="15" fill="rgb(232,18,1)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="447.50"></text></g><g><title>lique_core::lints::conditional_without_measurement::lint_conditional_without_measurement (89,866 samples, 1.43%)</title><rect x="22.2224%" y="421" width="1.4328%" height="15" fill="rgb(215,41,42)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;oq3_syntax::ast::generated::nodes::Stmt&gt; (89,866 samples, 1.43%)</title><rect x="22.2224%" y="405" width="1.4328%" height="15" fill="rgb(224,123,36)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="415.50"></text></g><g><title>rowan::cursor::free (89,866 samples, 1.43%)</title><rect x="22.2224%" y="389" width="1.4328%" height="15" fill="rgb(240,125,3)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rowan::cursor::NodeData&gt;&gt; (89,866 samples, 1.43%)</title><rect x="22.2224%" y="373" width="1.4328%" height="15" fill="rgb(205,98,50)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,866 samples, 1.43%)</title><rect x="22.2224%" y="357" width="1.4328%" height="15" fill="rgb(205,185,37)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89,866 samples, 1.43%)</title><rect x="22.2224%" y="341" width="1.4328%" height="15" fill="rgb(238,207,15)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (89,866 samples, 1.43%)</title><rect x="22.2224%" y="325" width="1.4328%" height="15" fill="rgb(213,199,42)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="335.50"></text></g><g><title>__GI___libc_free (89,866 samples, 1.43%)</title><rect x="22.2224%" y="309" width="1.4328%" height="15" fill="rgb(235,201,11)" fg:x="1393818" fg:w="89866"/><text x="22.4724%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,790 samples, 1.45%)</title><rect x="23.6552%" y="613" width="1.4475%" height="15" fill="rgb(207,46,11)" fg:x="1483684" fg:w="90790"/><text x="23.9052%" y="623.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (90,790 samples, 1.45%)</title><rect x="23.6552%" y="597" width="1.4475%" height="15" fill="rgb(241,35,35)" fg:x="1483684" fg:w="90790"/><text x="23.9052%" y="607.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (90,790 samples, 1.45%)</title><rect x="23.6552%" y="581" width="1.4475%" height="15" fill="rgb(243,32,47)" fg:x="1483684" fg:w="90790"/><text x="23.9052%" y="591.50"></text></g><g><title>&lt;core::str::pattern::CharArraySearcher&lt;_&gt; as core::str::pattern::Searcher&gt;::next_match (90,790 samples, 1.45%)</title><rect x="23.6552%" y="565" width="1.4475%" height="15" fill="rgb(247,202,23)" fg:x="1483684" fg:w="90790"/><text x="23.9052%" y="575.50"></text></g><g><title>core::str::pattern::Searcher::next_match (90,790 samples, 1.45%)</title><rect x="23.6552%" y="549" width="1.4475%" height="15" fill="rgb(219,102,11)" fg:x="1483684" fg:w="90790"/><text x="23.9052%" y="559.50"></text></g><g><title>&lt;ariadne::source::Source&lt;I&gt; as core::convert::From&lt;I&gt;&gt;::from (165,471 samples, 2.64%)</title><rect x="23.6552%" y="629" width="2.6382%" height="15" fill="rgb(243,110,44)" fg:x="1483684" fg:w="165471"/><text x="23.9052%" y="639.50">&lt;a..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (74,681 samples, 1.19%)</title><rect x="25.1027%" y="613" width="1.1907%" height="15" fill="rgb(222,74,54)" fg:x="1574474" fg:w="74681"/><text x="25.3527%" y="623.50"></text></g><g><title>core::str::count::count_chars (74,681 samples, 1.19%)</title><rect x="25.1027%" y="597" width="1.1907%" height="15" fill="rgb(216,99,12)" fg:x="1574474" fg:w="74681"/><text x="25.3527%" y="607.50"></text></g><g><title>core::str::count::do_count_chars (74,681 samples, 1.19%)</title><rect x="25.1027%" y="581" width="1.1907%" height="15" fill="rgb(226,22,26)" fg:x="1574474" fg:w="74681"/><text x="25.3527%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (90,751 samples, 1.45%)</title><rect x="26.2934%" y="629" width="1.4469%" height="15" fill="rgb(217,163,10)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="639.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_string (90,751 samples, 1.45%)</title><rect x="26.2934%" y="613" width="1.4469%" height="15" fill="rgb(213,25,53)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="623.50"></text></g><g><title>std::io::default_read_to_end (90,751 samples, 1.45%)</title><rect x="26.2934%" y="597" width="1.4469%" height="15" fill="rgb(252,105,26)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="607.50"></text></g><g><title>__GI___libc_read (90,751 samples, 1.45%)</title><rect x="26.2934%" y="581" width="1.4469%" height="15" fill="rgb(220,39,43)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (90,751 samples, 1.45%)</title><rect x="26.2934%" y="565" width="1.4469%" height="15" fill="rgb(229,68,48)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="575.50"></text></g><g><title>do_syscall_64 (90,751 samples, 1.45%)</title><rect x="26.2934%" y="549" width="1.4469%" height="15" fill="rgb(252,8,32)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="559.50"></text></g><g><title>__x64_sys_read (90,751 samples, 1.45%)</title><rect x="26.2934%" y="533" width="1.4469%" height="15" fill="rgb(223,20,43)" fg:x="1649155" fg:w="90751"/><text x="26.5434%" y="543.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (79,936 samples, 1.27%)</title><rect x="28.9476%" y="437" width="1.2745%" height="15" fill="rgb(229,81,49)" fg:x="1815629" fg:w="79936"/><text x="29.1976%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (79,936 samples, 1.27%)</title><rect x="28.9476%" y="421" width="1.2745%" height="15" fill="rgb(236,28,36)" fg:x="1815629" fg:w="79936"/><text x="29.1976%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (79,936 samples, 1.27%)</title><rect x="28.9476%" y="405" width="1.2745%" height="15" fill="rgb(249,185,26)" fg:x="1815629" fg:w="79936"/><text x="29.1976%" y="415.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (254,171 samples, 4.05%)</title><rect x="34.0937%" y="389" width="4.0524%" height="15" fill="rgb(249,174,33)" fg:x="2138398" fg:w="254171"/><text x="34.3437%" y="399.50">&lt;std..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (168,855 samples, 2.69%)</title><rect x="35.4539%" y="373" width="2.6921%" height="15" fill="rgb(233,201,37)" fg:x="2223714" fg:w="168855"/><text x="35.7039%" y="383.50">&lt;s..</text></g><g><title>core::slice::memchr::memrchr (85,472 samples, 1.36%)</title><rect x="36.7833%" y="357" width="1.3627%" height="15" fill="rgb(221,78,26)" fg:x="2307097" fg:w="85472"/><text x="37.0333%" y="367.50"></text></g><g><title>core::slice::memchr::memrchr (91,186 samples, 1.45%)</title><rect x="38.1460%" y="341" width="1.4538%" height="15" fill="rgb(250,127,30)" fg:x="2392569" fg:w="91186"/><text x="38.3960%" y="351.50"></text></g><g><title>yansi::style::Style::fmt_prefix (757,660 samples, 12.08%)</title><rect x="30.2220%" y="437" width="12.0798%" height="15" fill="rgb(230,49,44)" fg:x="1895565" fg:w="757660"/><text x="30.4720%" y="447.50">yansi::style::Styl..</text></g><g><title>yansi::color::Color::fmt (599,314 samples, 9.56%)</title><rect x="32.7466%" y="421" width="9.5552%" height="15" fill="rgb(229,67,23)" fg:x="2053911" fg:w="599314"/><text x="32.9966%" y="431.50">yansi::color::..</text></g><g><title>core::fmt::write (599,314 samples, 9.56%)</title><rect x="32.7466%" y="405" width="9.5552%" height="15" fill="rgb(249,83,47)" fg:x="2053911" fg:w="599314"/><text x="32.9966%" y="415.50">core::fmt::wri..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (260,656 samples, 4.16%)</title><rect x="38.1460%" y="389" width="4.1558%" height="15" fill="rgb(215,43,3)" fg:x="2392569" fg:w="260656"/><text x="38.3960%" y="399.50">core:..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (260,656 samples, 4.16%)</title><rect x="38.1460%" y="373" width="4.1558%" height="15" fill="rgb(238,154,13)" fg:x="2392569" fg:w="260656"/><text x="38.3960%" y="383.50">&lt;std:..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (260,656 samples, 4.16%)</title><rect x="38.1460%" y="357" width="4.1558%" height="15" fill="rgb(219,56,2)" fg:x="2392569" fg:w="260656"/><text x="38.3960%" y="367.50">&lt;std:..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (169,470 samples, 2.70%)</title><rect x="39.5999%" y="341" width="2.7020%" height="15" fill="rgb(233,0,4)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="351.50">st..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (169,470 samples, 2.70%)</title><rect x="39.5999%" y="325" width="2.7020%" height="15" fill="rgb(235,30,7)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="335.50">st..</text></g><g><title>__GI___libc_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="309" width="2.7020%" height="15" fill="rgb(250,79,13)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="319.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (169,470 samples, 2.70%)</title><rect x="39.5999%" y="293" width="2.7020%" height="15" fill="rgb(211,146,34)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="303.50">en..</text></g><g><title>do_syscall_64 (169,470 samples, 2.70%)</title><rect x="39.5999%" y="277" width="2.7020%" height="15" fill="rgb(228,22,38)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="287.50">do..</text></g><g><title>x64_sys_call (169,470 samples, 2.70%)</title><rect x="39.5999%" y="261" width="2.7020%" height="15" fill="rgb(235,168,5)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="271.50">x6..</text></g><g><title>__x64_sys_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="245" width="2.7020%" height="15" fill="rgb(221,155,16)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="255.50">__..</text></g><g><title>ksys_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="229" width="2.7020%" height="15" fill="rgb(215,215,53)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="239.50">ks..</text></g><g><title>vfs_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="213" width="2.7020%" height="15" fill="rgb(223,4,10)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="223.50">vf..</text></g><g><title>tty_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="197" width="2.7020%" height="15" fill="rgb(234,103,6)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="207.50">tt..</text></g><g><title>file_tty_write.constprop.0 (169,470 samples, 2.70%)</title><rect x="39.5999%" y="181" width="2.7020%" height="15" fill="rgb(227,97,0)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="191.50">fi..</text></g><g><title>iterate_tty_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="165" width="2.7020%" height="15" fill="rgb(234,150,53)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="175.50">it..</text></g><g><title>n_tty_write (169,470 samples, 2.70%)</title><rect x="39.5999%" y="149" width="2.7020%" height="15" fill="rgb(228,201,54)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="159.50">n_..</text></g><g><title>process_output_block (169,470 samples, 2.70%)</title><rect x="39.5999%" y="133" width="2.7020%" height="15" fill="rgb(222,22,37)" fg:x="2483755" fg:w="169470"/><text x="39.8499%" y="143.50">pr..</text></g><g><title>pty_write (82,940 samples, 1.32%)</title><rect x="40.9795%" y="117" width="1.3224%" height="15" fill="rgb(237,53,32)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="127.50"></text></g><g><title>tty_insert_flip_string_and_push_buffer (82,940 samples, 1.32%)</title><rect x="40.9795%" y="101" width="1.3224%" height="15" fill="rgb(233,25,53)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="111.50"></text></g><g><title>__tty_insert_flip_string_flags (82,940 samples, 1.32%)</title><rect x="40.9795%" y="85" width="1.3224%" height="15" fill="rgb(210,40,34)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="95.50"></text></g><g><title>__tty_buffer_request_room (82,940 samples, 1.32%)</title><rect x="40.9795%" y="69" width="1.3224%" height="15" fill="rgb(241,220,44)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="79.50"></text></g><g><title>tty_buffer_alloc (82,940 samples, 1.32%)</title><rect x="40.9795%" y="53" width="1.3224%" height="15" fill="rgb(235,28,35)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="63.50"></text></g><g><title>memset_orig (82,940 samples, 1.32%)</title><rect x="40.9795%" y="37" width="1.3224%" height="15" fill="rgb(210,56,17)" fg:x="2570285" fg:w="82940"/><text x="41.2295%" y="47.50"></text></g><g><title>&lt;ariadne::draw::Foreground&lt;T&gt; as core::fmt::Display&gt;::fmt (923,168 samples, 14.72%)</title><rect x="28.9476%" y="533" width="14.7186%" height="15" fill="rgb(224,130,29)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="543.50">&lt;ariadne::draw::Foregr..</text></g><g><title>core::fmt::Formatter::write_fmt (923,168 samples, 14.72%)</title><rect x="28.9476%" y="517" width="14.7186%" height="15" fill="rgb(235,212,8)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="527.50">core::fmt::Formatter::..</text></g><g><title>core::fmt::write (923,168 samples, 14.72%)</title><rect x="28.9476%" y="501" width="14.7186%" height="15" fill="rgb(223,33,50)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="511.50">core::fmt::write</text></g><g><title>&lt;yansi::paint::Painted&lt;T&gt; as core::fmt::Display&gt;::fmt (923,168 samples, 14.72%)</title><rect x="28.9476%" y="485" width="14.7186%" height="15" fill="rgb(219,149,13)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="495.50">&lt;yansi::paint::Painted..</text></g><g><title>yansi::paint::Painted&lt;T&gt;::fmt_args (923,168 samples, 14.72%)</title><rect x="28.9476%" y="469" width="14.7186%" height="15" fill="rgb(250,156,29)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="479.50">yansi::paint::Painted&lt;..</text></g><g><title>yansi::paint::Painted&lt;T&gt;::color_fmt_value (923,168 samples, 14.72%)</title><rect x="28.9476%" y="453" width="14.7186%" height="15" fill="rgb(216,193,19)" fg:x="1815629" fg:w="923168"/><text x="29.1976%" y="463.50">yansi::paint::Painted&lt;..</text></g><g><title>yansi::style::Style::fmt_suffix (85,572 samples, 1.36%)</title><rect x="42.3018%" y="437" width="1.3643%" height="15" fill="rgb(216,135,14)" fg:x="2653225" fg:w="85572"/><text x="42.5518%" y="447.50"></text></g><g><title>&lt;yansi::style::Style as core::cmp::PartialEq&gt;::eq (85,572 samples, 1.36%)</title><rect x="42.3018%" y="421" width="1.3643%" height="15" fill="rgb(241,47,5)" fg:x="2653225" fg:w="85572"/><text x="42.5518%" y="431.50"></text></g><g><title>_copy_from_iter (86,836 samples, 1.38%)</title><rect x="43.6662%" y="325" width="1.3845%" height="15" fill="rgb(233,42,35)" fg:x="2738797" fg:w="86836"/><text x="43.9162%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (259,114 samples, 4.13%)</title><rect x="43.6662%" y="469" width="4.1312%" height="15" fill="rgb(231,13,6)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="479.50">entry..</text></g><g><title>do_syscall_64 (259,114 samples, 4.13%)</title><rect x="43.6662%" y="453" width="4.1312%" height="15" fill="rgb(207,181,40)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="463.50">do_sy..</text></g><g><title>x64_sys_call (259,114 samples, 4.13%)</title><rect x="43.6662%" y="437" width="4.1312%" height="15" fill="rgb(254,173,49)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="447.50">x64_s..</text></g><g><title>__x64_sys_write (259,114 samples, 4.13%)</title><rect x="43.6662%" y="421" width="4.1312%" height="15" fill="rgb(221,1,38)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="431.50">__x64..</text></g><g><title>ksys_write (259,114 samples, 4.13%)</title><rect x="43.6662%" y="405" width="4.1312%" height="15" fill="rgb(206,124,46)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="415.50">ksys_..</text></g><g><title>vfs_write (259,114 samples, 4.13%)</title><rect x="43.6662%" y="389" width="4.1312%" height="15" fill="rgb(249,21,11)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="399.50">vfs_w..</text></g><g><title>tty_write (259,114 samples, 4.13%)</title><rect x="43.6662%" y="373" width="4.1312%" height="15" fill="rgb(222,201,40)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="383.50">tty_w..</text></g><g><title>file_tty_write.constprop.0 (259,114 samples, 4.13%)</title><rect x="43.6662%" y="357" width="4.1312%" height="15" fill="rgb(235,61,29)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="367.50">file_..</text></g><g><title>iterate_tty_write (259,114 samples, 4.13%)</title><rect x="43.6662%" y="341" width="4.1312%" height="15" fill="rgb(219,207,3)" fg:x="2738797" fg:w="259114"/><text x="43.9162%" y="351.50">itera..</text></g><g><title>n_tty_write (172,278 samples, 2.75%)</title><rect x="45.0506%" y="325" width="2.7467%" height="15" fill="rgb(222,56,46)" fg:x="2825633" fg:w="172278"/><text x="45.3006%" y="335.50">n_..</text></g><g><title>process_output_block (172,278 samples, 2.75%)</title><rect x="45.0506%" y="309" width="2.7467%" height="15" fill="rgb(239,76,54)" fg:x="2825633" fg:w="172278"/><text x="45.3006%" y="319.50">pr..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,349,518 samples, 21.52%)</title><rect x="27.7403%" y="581" width="21.5161%" height="15" fill="rgb(231,124,27)" fg:x="1739906" fg:w="1349518"/><text x="27.9903%" y="591.50">&lt;std::io::stdio::Stdout as std::io..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,349,518 samples, 21.52%)</title><rect x="27.7403%" y="565" width="21.5161%" height="15" fill="rgb(249,195,6)" fg:x="1739906" fg:w="1349518"/><text x="27.9903%" y="575.50">&lt;&amp;std::io::stdio::Stdout as std::i..</text></g><g><title>core::fmt::write (1,273,795 samples, 20.31%)</title><rect x="28.9476%" y="549" width="20.3088%" height="15" fill="rgb(237,174,47)" fg:x="1815629" fg:w="1273795"/><text x="29.1976%" y="559.50">core::fmt::write</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (350,627 samples, 5.59%)</title><rect x="43.6662%" y="533" width="5.5902%" height="15" fill="rgb(206,201,31)" fg:x="2738797" fg:w="350627"/><text x="43.9162%" y="543.50">&lt;std::i..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (350,627 samples, 5.59%)</title><rect x="43.6662%" y="517" width="5.5902%" height="15" fill="rgb(231,57,52)" fg:x="2738797" fg:w="350627"/><text x="43.9162%" y="527.50">&lt;std::i..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (350,627 samples, 5.59%)</title><rect x="43.6662%" y="501" width="5.5902%" height="15" fill="rgb(248,177,22)" fg:x="2738797" fg:w="350627"/><text x="43.9162%" y="511.50">std::io..</text></g><g><title>__GI___libc_write (350,627 samples, 5.59%)</title><rect x="43.6662%" y="485" width="5.5902%" height="15" fill="rgb(215,211,37)" fg:x="2738797" fg:w="350627"/><text x="43.9162%" y="495.50">__GI___..</text></g><g><title>syscall_return_via_sysret (91,513 samples, 1.46%)</title><rect x="47.7974%" y="469" width="1.4590%" height="15" fill="rgb(241,128,51)" fg:x="2997911" fg:w="91513"/><text x="48.0474%" y="479.50"></text></g><g><title>ariadne::write::&lt;impl ariadne::Report&lt;S&gt;&gt;::get_source_groups (91,343 samples, 1.46%)</title><rect x="49.2564%" y="581" width="1.4563%" height="15" fill="rgb(227,165,31)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (91,343 samples, 1.46%)</title><rect x="49.2564%" y="565" width="1.4563%" height="15" fill="rgb(228,167,24)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="575.50"></text></g><g><title>ariadne::write::_&lt;impl ariadne::Report&lt;S&gt;&gt;::get_source_groups::_{{closure}} (91,343 samples, 1.46%)</title><rect x="49.2564%" y="549" width="1.4563%" height="15" fill="rgb(228,143,12)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="533" width="1.4563%" height="15" fill="rgb(249,149,8)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="517" width="1.4563%" height="15" fill="rgb(243,35,44)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="501" width="1.4563%" height="15" fill="rgb(246,89,9)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="485" width="1.4563%" height="15" fill="rgb(233,213,13)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="469" width="1.4563%" height="15" fill="rgb(233,141,41)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (91,343 samples, 1.46%)</title><rect x="49.2564%" y="453" width="1.4563%" height="15" fill="rgb(239,167,4)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (91,343 samples, 1.46%)</title><rect x="49.2564%" y="437" width="1.4563%" height="15" fill="rgb(209,217,16)" fg:x="3089424" fg:w="91343"/><text x="49.5064%" y="447.50"></text></g><g><title>lique_linter::print_diagnostics_by_source_map (1,776,372 samples, 28.32%)</title><rect x="23.6552%" y="645" width="28.3217%" height="15" fill="rgb(219,88,35)" fg:x="1483684" fg:w="1776372"/><text x="23.9052%" y="655.50">lique_linter::print_diagnostics_by_source_map</text></g><g><title>ariadne::Report&lt;S&gt;::print (1,520,150 samples, 24.24%)</title><rect x="27.7403%" y="629" width="24.2366%" height="15" fill="rgb(220,193,23)" fg:x="1739906" fg:w="1520150"/><text x="27.9903%" y="639.50">ariadne::Report&lt;S&gt;::print</text></g><g><title>ariadne::write::&lt;impl ariadne::Report&lt;S&gt;&gt;::write_for_stdout (1,520,150 samples, 24.24%)</title><rect x="27.7403%" y="613" width="24.2366%" height="15" fill="rgb(230,90,52)" fg:x="1739906" fg:w="1520150"/><text x="27.9903%" y="623.50">ariadne::write::&lt;impl ariadne::Report&lt;S..</text></g><g><title>ariadne::write::&lt;impl ariadne::Report&lt;S&gt;&gt;::write_for_stream (1,520,150 samples, 24.24%)</title><rect x="27.7403%" y="597" width="24.2366%" height="15" fill="rgb(252,106,19)" fg:x="1739906" fg:w="1520150"/><text x="27.9903%" y="607.50">ariadne::write::&lt;impl ariadne::Report&lt;S..</text></g><g><title>core::option::Option&lt;T&gt;::map_or (79,289 samples, 1.26%)</title><rect x="50.7127%" y="581" width="1.2641%" height="15" fill="rgb(206,74,20)" fg:x="3180767" fg:w="79289"/><text x="50.9627%" y="591.50"></text></g><g><title>ariadne::write::_&lt;impl ariadne::Report&lt;S&gt;&gt;::write_for_stream::_{{closure}} (79,289 samples, 1.26%)</title><rect x="50.7127%" y="565" width="1.2641%" height="15" fill="rgb(230,138,44)" fg:x="3180767" fg:w="79289"/><text x="50.9627%" y="575.50"></text></g><g><title>&lt;oq3_semantics::context::Context as core::clone::Clone&gt;::clone (89,973 samples, 1.43%)</title><rect x="51.9769%" y="613" width="1.4345%" height="15" fill="rgb(235,182,43)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="623.50"></text></g><g><title>&lt;oq3_semantics::symbols::SymbolTable as core::clone::Clone&gt;::clone (89,973 samples, 1.43%)</title><rect x="51.9769%" y="597" width="1.4345%" height="15" fill="rgb(242,16,51)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (89,973 samples, 1.43%)</title><rect x="51.9769%" y="581" width="1.4345%" height="15" fill="rgb(248,9,4)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (89,973 samples, 1.43%)</title><rect x="51.9769%" y="565" width="1.4345%" height="15" fill="rgb(210,31,22)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (89,973 samples, 1.43%)</title><rect x="51.9769%" y="549" width="1.4345%" height="15" fill="rgb(239,54,39)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89,973 samples, 1.43%)</title><rect x="51.9769%" y="533" width="1.4345%" height="15" fill="rgb(230,99,41)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89,973 samples, 1.43%)</title><rect x="51.9769%" y="517" width="1.4345%" height="15" fill="rgb(253,106,12)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (89,973 samples, 1.43%)</title><rect x="51.9769%" y="501" width="1.4345%" height="15" fill="rgb(213,46,41)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (89,973 samples, 1.43%)</title><rect x="51.9769%" y="485" width="1.4345%" height="15" fill="rgb(215,133,35)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (89,973 samples, 1.43%)</title><rect x="51.9769%" y="469" width="1.4345%" height="15" fill="rgb(213,28,5)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89,973 samples, 1.43%)</title><rect x="51.9769%" y="453" width="1.4345%" height="15" fill="rgb(215,77,49)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89,973 samples, 1.43%)</title><rect x="51.9769%" y="437" width="1.4345%" height="15" fill="rgb(248,100,22)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="447.50"></text></g><g><title>alloc::alloc::alloc (89,973 samples, 1.43%)</title><rect x="51.9769%" y="421" width="1.4345%" height="15" fill="rgb(208,67,9)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="431.50"></text></g><g><title>__GI___libc_malloc (89,973 samples, 1.43%)</title><rect x="51.9769%" y="405" width="1.4345%" height="15" fill="rgb(219,133,21)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="415.50"></text></g><g><title>_int_malloc (89,973 samples, 1.43%)</title><rect x="51.9769%" y="389" width="1.4345%" height="15" fill="rgb(246,46,29)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="399.50"></text></g><g><title>asm_exc_page_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="373" width="1.4345%" height="15" fill="rgb(246,185,52)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="383.50"></text></g><g><title>exc_page_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="357" width="1.4345%" height="15" fill="rgb(252,136,11)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="367.50"></text></g><g><title>do_user_addr_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="341" width="1.4345%" height="15" fill="rgb(219,138,53)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="351.50"></text></g><g><title>handle_mm_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="325" width="1.4345%" height="15" fill="rgb(211,51,23)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="335.50"></text></g><g><title>__handle_mm_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="309" width="1.4345%" height="15" fill="rgb(247,221,28)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="319.50"></text></g><g><title>handle_pte_fault (89,973 samples, 1.43%)</title><rect x="51.9769%" y="293" width="1.4345%" height="15" fill="rgb(251,222,45)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="303.50"></text></g><g><title>do_anonymous_page (89,973 samples, 1.43%)</title><rect x="51.9769%" y="277" width="1.4345%" height="15" fill="rgb(217,162,53)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="287.50"></text></g><g><title>folio_add_lru_vma (89,973 samples, 1.43%)</title><rect x="51.9769%" y="261" width="1.4345%" height="15" fill="rgb(229,93,14)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="271.50"></text></g><g><title>folio_add_lru (89,973 samples, 1.43%)</title><rect x="51.9769%" y="245" width="1.4345%" height="15" fill="rgb(209,67,49)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="255.50"></text></g><g><title>folio_batch_move_lru (89,973 samples, 1.43%)</title><rect x="51.9769%" y="229" width="1.4345%" height="15" fill="rgb(213,87,29)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="239.50"></text></g><g><title>lru_add_fn (89,973 samples, 1.43%)</title><rect x="51.9769%" y="213" width="1.4345%" height="15" fill="rgb(205,151,52)" fg:x="3260056" fg:w="89973"/><text x="52.2269%" y="223.50"></text></g><g><title>oq3_semantics::context::Context::new (89,482 samples, 1.43%)</title><rect x="53.4114%" y="613" width="1.4267%" height="15" fill="rgb(253,215,39)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="623.50"></text></g><g><title>asm_exc_page_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="597" width="1.4267%" height="15" fill="rgb(221,220,41)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="607.50"></text></g><g><title>exc_page_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="581" width="1.4267%" height="15" fill="rgb(218,133,21)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="591.50"></text></g><g><title>do_user_addr_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="565" width="1.4267%" height="15" fill="rgb(221,193,43)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="575.50"></text></g><g><title>handle_mm_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="549" width="1.4267%" height="15" fill="rgb(240,128,52)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="559.50"></text></g><g><title>__handle_mm_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="533" width="1.4267%" height="15" fill="rgb(253,114,12)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="543.50"></text></g><g><title>handle_pte_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="517" width="1.4267%" height="15" fill="rgb(215,223,47)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="527.50"></text></g><g><title>do_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="501" width="1.4267%" height="15" fill="rgb(248,225,23)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="511.50"></text></g><g><title>do_read_fault (89,482 samples, 1.43%)</title><rect x="53.4114%" y="485" width="1.4267%" height="15" fill="rgb(250,108,0)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="495.50"></text></g><g><title>filemap_map_pages (89,482 samples, 1.43%)</title><rect x="53.4114%" y="469" width="1.4267%" height="15" fill="rgb(228,208,7)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="479.50"></text></g><g><title>next_uptodate_folio (89,482 samples, 1.43%)</title><rect x="53.4114%" y="453" width="1.4267%" height="15" fill="rgb(244,45,10)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="463.50"></text></g><g><title>xas_find (89,482 samples, 1.43%)</title><rect x="53.4114%" y="437" width="1.4267%" height="15" fill="rgb(207,125,25)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="447.50"></text></g><g><title>xas_load (89,482 samples, 1.43%)</title><rect x="53.4114%" y="421" width="1.4267%" height="15" fill="rgb(210,195,18)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="431.50"></text></g><g><title>xas_descend (89,482 samples, 1.43%)</title><rect x="53.4114%" y="405" width="1.4267%" height="15" fill="rgb(249,80,12)" fg:x="3350029" fg:w="89482"/><text x="53.6614%" y="415.50"></text></g><g><title>oq3_semantics::syntax_to_semantics::analyze_source (269,049 samples, 4.29%)</title><rect x="51.9769%" y="629" width="4.2896%" height="15" fill="rgb(221,65,9)" fg:x="3260056" fg:w="269049"/><text x="52.2269%" y="639.50">oq3_s..</text></g><g><title>oq3_semantics::syntax_to_semantics::syntax_to_semantic (89,594 samples, 1.43%)</title><rect x="54.8380%" y="613" width="1.4284%" height="15" fill="rgb(235,49,36)" fg:x="3439511" fg:w="89594"/><text x="55.0880%" y="623.50"></text></g><g><title>oq3_semantics::syntax_to_semantics::from_stmt (89,594 samples, 1.43%)</title><rect x="54.8380%" y="597" width="1.4284%" height="15" fill="rgb(225,32,20)" fg:x="3439511" fg:w="89594"/><text x="55.0880%" y="607.50"></text></g><g><title>oq3_semantics::syntax_to_semantics::from_classical_declaration_statement (89,594 samples, 1.43%)</title><rect x="54.8380%" y="581" width="1.4284%" height="15" fill="rgb(215,141,46)" fg:x="3439511" fg:w="89594"/><text x="55.0880%" y="591.50"></text></g><g><title>oq3_semantics::syntax_to_semantics::from_scalar_type (89,594 samples, 1.43%)</title><rect x="54.8380%" y="565" width="1.4284%" height="15" fill="rgb(250,160,47)" fg:x="3439511" fg:w="89594"/><text x="55.0880%" y="575.50"></text></g><g><title>oq3_parser::TopEntryPoint::parse (87,003 samples, 1.39%)</title><rect x="56.2665%" y="565" width="1.3871%" height="15" fill="rgb(216,222,40)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="575.50"></text></g><g><title>oq3_parser::grammar::entry::top::source_file (87,003 samples, 1.39%)</title><rect x="56.2665%" y="549" width="1.3871%" height="15" fill="rgb(234,217,39)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="559.50"></text></g><g><title>oq3_parser::grammar::items::source_file_contents (87,003 samples, 1.39%)</title><rect x="56.2665%" y="533" width="1.3871%" height="15" fill="rgb(207,178,40)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="543.50"></text></g><g><title>oq3_parser::grammar::items::item (87,003 samples, 1.39%)</title><rect x="56.2665%" y="517" width="1.3871%" height="15" fill="rgb(221,136,13)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="527.50"></text></g><g><title>oq3_parser::grammar::items::opt_item (87,003 samples, 1.39%)</title><rect x="56.2665%" y="501" width="1.3871%" height="15" fill="rgb(249,199,10)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="511.50"></text></g><g><title>oq3_parser::grammar::items::version_string (87,003 samples, 1.39%)</title><rect x="56.2665%" y="485" width="1.3871%" height="15" fill="rgb(249,222,13)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="495.50"></text></g><g><title>oq3_parser::grammar::items::version_ (87,003 samples, 1.39%)</title><rect x="56.2665%" y="469" width="1.3871%" height="15" fill="rgb(244,185,38)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="479.50"></text></g><g><title>oq3_parser::parser::Parser::expect (87,003 samples, 1.39%)</title><rect x="56.2665%" y="453" width="1.3871%" height="15" fill="rgb(236,202,9)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="463.50"></text></g><g><title>oq3_parser::parser::Parser::eat (87,003 samples, 1.39%)</title><rect x="56.2665%" y="437" width="1.3871%" height="15" fill="rgb(250,229,37)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="447.50"></text></g><g><title>oq3_parser::parser::Parser::do_bump (87,003 samples, 1.39%)</title><rect x="56.2665%" y="421" width="1.3871%" height="15" fill="rgb(206,174,23)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="431.50"></text></g><g><title>oq3_parser::parser::Parser::push_event (87,003 samples, 1.39%)</title><rect x="56.2665%" y="405" width="1.3871%" height="15" fill="rgb(211,33,43)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (87,003 samples, 1.39%)</title><rect x="56.2665%" y="389" width="1.3871%" height="15" fill="rgb(245,58,50)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (87,003 samples, 1.39%)</title><rect x="56.2665%" y="373" width="1.3871%" height="15" fill="rgb(244,68,36)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (87,003 samples, 1.39%)</title><rect x="56.2665%" y="357" width="1.3871%" height="15" fill="rgb(232,229,15)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (87,003 samples, 1.39%)</title><rect x="56.2665%" y="341" width="1.3871%" height="15" fill="rgb(254,30,23)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (87,003 samples, 1.39%)</title><rect x="56.2665%" y="325" width="1.3871%" height="15" fill="rgb(235,160,14)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (87,003 samples, 1.39%)</title><rect x="56.2665%" y="309" width="1.3871%" height="15" fill="rgb(212,155,44)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (87,003 samples, 1.39%)</title><rect x="56.2665%" y="293" width="1.3871%" height="15" fill="rgb(226,2,50)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="303.50"></text></g><g><title>alloc::alloc::realloc (87,003 samples, 1.39%)</title><rect x="56.2665%" y="277" width="1.3871%" height="15" fill="rgb(234,177,6)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="287.50"></text></g><g><title>__GI___libc_realloc (87,003 samples, 1.39%)</title><rect x="56.2665%" y="261" width="1.3871%" height="15" fill="rgb(217,24,9)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="271.50"></text></g><g><title>_int_realloc (87,003 samples, 1.39%)</title><rect x="56.2665%" y="245" width="1.3871%" height="15" fill="rgb(220,13,46)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (87,003 samples, 1.39%)</title><rect x="56.2665%" y="229" width="1.3871%" height="15" fill="rgb(239,221,27)" fg:x="3529105" fg:w="87003"/><text x="56.5165%" y="239.50"></text></g><g><title>oq3_parser::shortcuts::Builder::exit (88,873 samples, 1.42%)</title><rect x="57.6536%" y="533" width="1.4170%" height="15" fill="rgb(222,198,25)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="543.50"></text></g><g><title>oq3_syntax::syntax_node::SyntaxTreeBuilder::finish_node (88,873 samples, 1.42%)</title><rect x="57.6536%" y="517" width="1.4170%" height="15" fill="rgb(211,99,13)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="527.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::finish_node (88,873 samples, 1.42%)</title><rect x="57.6536%" y="501" width="1.4170%" height="15" fill="rgb(232,111,31)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="511.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (88,873 samples, 1.42%)</title><rect x="57.6536%" y="485" width="1.4170%" height="15" fill="rgb(245,82,37)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="495.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (88,873 samples, 1.42%)</title><rect x="57.6536%" y="469" width="1.4170%" height="15" fill="rgb(227,149,46)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="479.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (88,873 samples, 1.42%)</title><rect x="57.6536%" y="453" width="1.4170%" height="15" fill="rgb(218,36,50)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88,873 samples, 1.42%)</title><rect x="57.6536%" y="437" width="1.4170%" height="15" fill="rgb(226,80,48)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (88,873 samples, 1.42%)</title><rect x="57.6536%" y="421" width="1.4170%" height="15" fill="rgb(238,224,15)" fg:x="3616108" fg:w="88873"/><text x="57.9036%" y="431.50"></text></g><g><title>oq3_source_file::source_file::parse_source_and_includes (263,874 samples, 4.21%)</title><rect x="56.2665%" y="613" width="4.2071%" height="15" fill="rgb(241,136,10)" fg:x="3529105" fg:w="263874"/><text x="56.5165%" y="623.50">oq3_s..</text></g><g><title>oq3_syntax::&lt;impl oq3_syntax::ast::generated::nodes::SourceFile&gt;::parse_check_lex (263,874 samples, 4.21%)</title><rect x="56.2665%" y="597" width="4.2071%" height="15" fill="rgb(208,32,45)" fg:x="3529105" fg:w="263874"/><text x="56.5165%" y="607.50">oq3_s..</text></g><g><title>oq3_syntax::parsing::parse_text_check_lex (263,874 samples, 4.21%)</title><rect x="56.2665%" y="581" width="4.2071%" height="15" fill="rgb(207,135,9)" fg:x="3529105" fg:w="263874"/><text x="56.5165%" y="591.50">oq3_s..</text></g><g><title>oq3_syntax::parsing::build_tree (176,871 samples, 2.82%)</title><rect x="57.6536%" y="565" width="2.8200%" height="15" fill="rgb(206,86,44)" fg:x="3616108" fg:w="176871"/><text x="57.9036%" y="575.50">oq..</text></g><g><title>oq3_parser::shortcuts::&lt;impl oq3_parser::lexed_str::LexedStr&gt;::intersperse_trivia (176,871 samples, 2.82%)</title><rect x="57.6536%" y="549" width="2.8200%" height="15" fill="rgb(245,177,15)" fg:x="3616108" fg:w="176871"/><text x="57.9036%" y="559.50">oq..</text></g><g><title>oq3_parser::shortcuts::Builder::token (87,998 samples, 1.40%)</title><rect x="59.0706%" y="533" width="1.4030%" height="15" fill="rgb(206,64,50)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="543.50"></text></g><g><title>oq3_syntax::syntax_node::SyntaxTreeBuilder::finish_node (87,998 samples, 1.40%)</title><rect x="59.0706%" y="517" width="1.4030%" height="15" fill="rgb(234,36,40)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="527.50"></text></g><g><title>rowan::green::builder::GreenNodeBuilder::finish_node (87,998 samples, 1.40%)</title><rect x="59.0706%" y="501" width="1.4030%" height="15" fill="rgb(213,64,8)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="511.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node (87,998 samples, 1.40%)</title><rect x="59.0706%" y="485" width="1.4030%" height="15" fill="rgb(210,75,36)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="495.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S,A&gt;::insert_with_hasher (87,998 samples, 1.40%)</title><rect x="59.0706%" y="469" width="1.4030%" height="15" fill="rgb(229,88,21)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_entry (87,998 samples, 1.40%)</title><rect x="59.0706%" y="453" width="1.4030%" height="15" fill="rgb(252,204,47)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (87,998 samples, 1.40%)</title><rect x="59.0706%" y="437" width="1.4030%" height="15" fill="rgb(208,77,27)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (87,998 samples, 1.40%)</title><rect x="59.0706%" y="421" width="1.4030%" height="15" fill="rgb(221,76,26)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (87,998 samples, 1.40%)</title><rect x="59.0706%" y="405" width="1.4030%" height="15" fill="rgb(225,139,18)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (87,998 samples, 1.40%)</title><rect x="59.0706%" y="389" width="1.4030%" height="15" fill="rgb(230,137,11)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (87,998 samples, 1.40%)</title><rect x="59.0706%" y="373" width="1.4030%" height="15" fill="rgb(212,28,1)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (87,998 samples, 1.40%)</title><rect x="59.0706%" y="357" width="1.4030%" height="15" fill="rgb(248,164,17)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="367.50"></text></g><g><title>hashbrown::map::RawVacantEntryMut&lt;K,V,S,A&gt;::insert_with_hasher::_{{closure}} (87,998 samples, 1.40%)</title><rect x="59.0706%" y="341" width="1.4030%" height="15" fill="rgb(222,171,42)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="351.50"></text></g><g><title>rowan::green::node_cache::NodeCache::node::_{{closure}} (87,998 samples, 1.40%)</title><rect x="59.0706%" y="325" width="1.4030%" height="15" fill="rgb(243,84,45)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="335.50"></text></g><g><title>rowan::green::node_cache::node_hash (87,998 samples, 1.40%)</title><rect x="59.0706%" y="309" width="1.4030%" height="15" fill="rgb(252,49,23)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="319.50"></text></g><g><title>rowan::green::node_cache::token_hash (87,998 samples, 1.40%)</title><rect x="59.0706%" y="293" width="1.4030%" height="15" fill="rgb(215,19,7)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (87,998 samples, 1.40%)</title><rect x="59.0706%" y="277" width="1.4030%" height="15" fill="rgb(238,81,41)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="287.50"></text></g><g><title>core::hash::Hasher::write_str (87,998 samples, 1.40%)</title><rect x="59.0706%" y="261" width="1.4030%" height="15" fill="rgb(210,199,37)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="271.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (87,998 samples, 1.40%)</title><rect x="59.0706%" y="245" width="1.4030%" height="15" fill="rgb(244,192,49)" fg:x="3704981" fg:w="87998"/><text x="59.3206%" y="255.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2,836,003 samples, 45.22%)</title><rect x="16.6358%" y="709" width="45.2160%" height="15" fill="rgb(226,211,11)" fg:x="1043417" fg:w="2836003"/><text x="16.8858%" y="719.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,836,003 samples, 45.22%)</title><rect x="16.6358%" y="693" width="45.2160%" height="15" fill="rgb(236,162,54)" fg:x="1043417" fg:w="2836003"/><text x="16.8858%" y="703.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,836,003 samples, 45.22%)</title><rect x="16.6358%" y="677" width="45.2160%" height="15" fill="rgb(220,229,9)" fg:x="1043417" fg:w="2836003"/><text x="16.8858%" y="687.50">core::ops::function::FnOnce::call_once</text></g><g><title>lique_linter::main (2,836,003 samples, 45.22%)</title><rect x="16.6358%" y="661" width="45.2160%" height="15" fill="rgb(250,87,22)" fg:x="1043417" fg:w="2836003"/><text x="16.8858%" y="671.50">lique_linter::main</text></g><g><title>oq3_semantics::syntax_to_semantics::parse_source_file (619,364 samples, 9.87%)</title><rect x="51.9769%" y="645" width="9.8749%" height="15" fill="rgb(239,43,17)" fg:x="3260056" fg:w="619364"/><text x="52.2269%" y="655.50">oq3_semantics:..</text></g><g><title>oq3_source_file::api::parse_source_file (350,315 samples, 5.59%)</title><rect x="56.2665%" y="629" width="5.5853%" height="15" fill="rgb(231,177,25)" fg:x="3529105" fg:w="350315"/><text x="56.5165%" y="639.50">oq3_sou..</text></g><g><title>oq3_source_file::source_file::read_source_file (86,441 samples, 1.38%)</title><rect x="60.4736%" y="613" width="1.3782%" height="15" fill="rgb(219,179,1)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="623.50"></text></g><g><title>std::fs::read_to_string (86,441 samples, 1.38%)</title><rect x="60.4736%" y="597" width="1.3782%" height="15" fill="rgb(238,219,53)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="607.50"></text></g><g><title>std::fs::read_to_string::inner (86,441 samples, 1.38%)</title><rect x="60.4736%" y="581" width="1.3782%" height="15" fill="rgb(232,167,36)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="591.50"></text></g><g><title>__GI___close (86,441 samples, 1.38%)</title><rect x="60.4736%" y="565" width="1.3782%" height="15" fill="rgb(244,19,51)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (86,441 samples, 1.38%)</title><rect x="60.4736%" y="549" width="1.3782%" height="15" fill="rgb(224,6,22)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="559.50"></text></g><g><title>do_syscall_64 (86,441 samples, 1.38%)</title><rect x="60.4736%" y="533" width="1.3782%" height="15" fill="rgb(224,145,5)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="543.50"></text></g><g><title>x64_sys_call (86,441 samples, 1.38%)</title><rect x="60.4736%" y="517" width="1.3782%" height="15" fill="rgb(234,130,49)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="527.50"></text></g><g><title>__x64_sys_close (86,441 samples, 1.38%)</title><rect x="60.4736%" y="501" width="1.3782%" height="15" fill="rgb(254,6,2)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="511.50"></text></g><g><title>__fput_sync (86,441 samples, 1.38%)</title><rect x="60.4736%" y="485" width="1.3782%" height="15" fill="rgb(208,96,46)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="495.50"></text></g><g><title>__fput (86,441 samples, 1.38%)</title><rect x="60.4736%" y="469" width="1.3782%" height="15" fill="rgb(239,3,39)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="479.50"></text></g><g><title>apparmor_file_free_security (86,441 samples, 1.38%)</title><rect x="60.4736%" y="453" width="1.3782%" height="15" fill="rgb(233,210,1)" fg:x="3792979" fg:w="86441"/><text x="60.7236%" y="463.50"></text></g><g><title>std::rt::lang_start_internal (3,085,622 samples, 49.20%)</title><rect x="13.9925%" y="725" width="49.1958%" height="15" fill="rgb(244,137,37)" fg:x="877625" fg:w="3085622"/><text x="14.2425%" y="735.50">std::rt::lang_start_internal</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (83,827 samples, 1.34%)</title><rect x="61.8517%" y="709" width="1.3365%" height="15" fill="rgb(240,136,2)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="719.50"></text></g><g><title>__GI___mmap64 (83,827 samples, 1.34%)</title><rect x="61.8517%" y="693" width="1.3365%" height="15" fill="rgb(239,18,37)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="703.50"></text></g><g><title>__GI___mmap64 (83,827 samples, 1.34%)</title><rect x="61.8517%" y="677" width="1.3365%" height="15" fill="rgb(218,185,22)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (83,827 samples, 1.34%)</title><rect x="61.8517%" y="661" width="1.3365%" height="15" fill="rgb(225,218,4)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="671.50"></text></g><g><title>do_syscall_64 (83,827 samples, 1.34%)</title><rect x="61.8517%" y="645" width="1.3365%" height="15" fill="rgb(230,182,32)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="655.50"></text></g><g><title>x64_sys_call (83,827 samples, 1.34%)</title><rect x="61.8517%" y="629" width="1.3365%" height="15" fill="rgb(242,56,43)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="639.50"></text></g><g><title>__x64_sys_mmap (83,827 samples, 1.34%)</title><rect x="61.8517%" y="613" width="1.3365%" height="15" fill="rgb(233,99,24)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="623.50"></text></g><g><title>ksys_mmap_pgoff (83,827 samples, 1.34%)</title><rect x="61.8517%" y="597" width="1.3365%" height="15" fill="rgb(234,209,42)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="607.50"></text></g><g><title>vm_mmap_pgoff (83,827 samples, 1.34%)</title><rect x="61.8517%" y="581" width="1.3365%" height="15" fill="rgb(227,7,12)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="591.50"></text></g><g><title>do_mmap (83,827 samples, 1.34%)</title><rect x="61.8517%" y="565" width="1.3365%" height="15" fill="rgb(245,203,43)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="575.50"></text></g><g><title>mmap_region (83,827 samples, 1.34%)</title><rect x="61.8517%" y="549" width="1.3365%" height="15" fill="rgb(238,205,33)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="559.50"></text></g><g><title>perf_event_mmap (83,827 samples, 1.34%)</title><rect x="61.8517%" y="533" width="1.3365%" height="15" fill="rgb(231,56,7)" fg:x="3879420" fg:w="83827"/><text x="62.1017%" y="543.50"></text></g><g><title>__libc_start_main_impl (3,255,959 samples, 51.91%)</title><rect x="12.6835%" y="773" width="51.9116%" height="15" fill="rgb(244,186,29)" fg:x="795526" fg:w="3255959"/><text x="12.9335%" y="783.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (3,255,959 samples, 51.91%)</title><rect x="12.6835%" y="757" width="51.9116%" height="15" fill="rgb(234,111,31)" fg:x="795526" fg:w="3255959"/><text x="12.9335%" y="767.50">__libc_start_call_main</text></g><g><title>main (3,173,860 samples, 50.60%)</title><rect x="13.9925%" y="741" width="50.6026%" height="15" fill="rgb(241,149,10)" fg:x="877625" fg:w="3173860"/><text x="14.2425%" y="751.50">main</text></g><g><title>sync_regs (88,238 samples, 1.41%)</title><rect x="63.1882%" y="725" width="1.4068%" height="15" fill="rgb(249,206,44)" fg:x="3963247" fg:w="88238"/><text x="63.4382%" y="735.50"></text></g><g><title>__GI___tunables_init (69,102 samples, 1.10%)</title><rect x="64.5951%" y="725" width="1.1017%" height="15" fill="rgb(251,153,30)" fg:x="4051485" fg:w="69102"/><text x="64.8451%" y="735.50"></text></g><g><title>__libc_early_init (87,233 samples, 1.39%)</title><rect x="65.6968%" y="709" width="1.3908%" height="15" fill="rgb(239,152,38)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="719.50"></text></g><g><title>asm_exc_page_fault (87,233 samples, 1.39%)</title><rect x="65.6968%" y="693" width="1.3908%" height="15" fill="rgb(249,139,47)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="703.50"></text></g><g><title>exc_page_fault (87,233 samples, 1.39%)</title><rect x="65.6968%" y="677" width="1.3908%" height="15" fill="rgb(244,64,35)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="687.50"></text></g><g><title>do_user_addr_fault (87,233 samples, 1.39%)</title><rect x="65.6968%" y="661" width="1.3908%" height="15" fill="rgb(216,46,15)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="671.50"></text></g><g><title>handle_mm_fault (87,233 samples, 1.39%)</title><rect x="65.6968%" y="645" width="1.3908%" height="15" fill="rgb(250,74,19)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="655.50"></text></g><g><title>count_memcg_events.constprop.0 (87,233 samples, 1.39%)</title><rect x="65.6968%" y="629" width="1.3908%" height="15" fill="rgb(249,42,33)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="639.50"></text></g><g><title>__count_memcg_events (87,233 samples, 1.39%)</title><rect x="65.6968%" y="613" width="1.3908%" height="15" fill="rgb(242,149,17)" fg:x="4120587" fg:w="87233"/><text x="65.9468%" y="623.50"></text></g><g><title>_dl_load_cache_lookup (78,793 samples, 1.26%)</title><rect x="67.0876%" y="645" width="1.2562%" height="15" fill="rgb(244,29,21)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="655.50"></text></g><g><title>asm_exc_page_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="629" width="1.2562%" height="15" fill="rgb(220,130,37)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="639.50"></text></g><g><title>exc_page_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="613" width="1.2562%" height="15" fill="rgb(211,67,2)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="623.50"></text></g><g><title>do_user_addr_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="597" width="1.2562%" height="15" fill="rgb(235,68,52)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="607.50"></text></g><g><title>handle_mm_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="581" width="1.2562%" height="15" fill="rgb(246,142,3)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="591.50"></text></g><g><title>__handle_mm_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="565" width="1.2562%" height="15" fill="rgb(241,25,7)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="575.50"></text></g><g><title>handle_pte_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="549" width="1.2562%" height="15" fill="rgb(242,119,39)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="559.50"></text></g><g><title>do_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="533" width="1.2562%" height="15" fill="rgb(241,98,45)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="543.50"></text></g><g><title>do_read_fault (78,793 samples, 1.26%)</title><rect x="67.0876%" y="517" width="1.2562%" height="15" fill="rgb(254,28,30)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="527.50"></text></g><g><title>filemap_map_pages (78,793 samples, 1.26%)</title><rect x="67.0876%" y="501" width="1.2562%" height="15" fill="rgb(241,142,54)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="511.50"></text></g><g><title>next_uptodate_folio (78,793 samples, 1.26%)</title><rect x="67.0876%" y="485" width="1.2562%" height="15" fill="rgb(222,85,15)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="495.50"></text></g><g><title>xas_find (78,793 samples, 1.26%)</title><rect x="67.0876%" y="469" width="1.2562%" height="15" fill="rgb(210,85,47)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="479.50"></text></g><g><title>xas_load (78,793 samples, 1.26%)</title><rect x="67.0876%" y="453" width="1.2562%" height="15" fill="rgb(224,206,25)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="463.50"></text></g><g><title>xas_start (78,793 samples, 1.26%)</title><rect x="67.0876%" y="437" width="1.2562%" height="15" fill="rgb(243,201,19)" fg:x="4207820" fg:w="78793"/><text x="67.3376%" y="447.50"></text></g><g><title>do_vmi_munmap (80,140 samples, 1.28%)</title><rect x="68.3438%" y="453" width="1.2777%" height="15" fill="rgb(236,59,4)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="463.50"></text></g><g><title>do_vmi_align_munmap (80,140 samples, 1.28%)</title><rect x="68.3438%" y="437" width="1.2777%" height="15" fill="rgb(254,179,45)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="447.50"></text></g><g><title>mas_store_gfp (80,140 samples, 1.28%)</title><rect x="68.3438%" y="421" width="1.2777%" height="15" fill="rgb(226,14,10)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="431.50"></text></g><g><title>mas_wr_store_entry.isra.0 (80,140 samples, 1.28%)</title><rect x="68.3438%" y="405" width="1.2777%" height="15" fill="rgb(244,27,41)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="415.50"></text></g><g><title>mas_wr_modify (80,140 samples, 1.28%)</title><rect x="68.3438%" y="389" width="1.2777%" height="15" fill="rgb(235,35,32)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="399.50"></text></g><g><title>mas_leaf_max_gap (80,140 samples, 1.28%)</title><rect x="68.3438%" y="373" width="1.2777%" height="15" fill="rgb(218,68,31)" fg:x="4286613" fg:w="80140"/><text x="68.5938%" y="383.50"></text></g><g><title>__mmap64 (162,669 samples, 2.59%)</title><rect x="68.3438%" y="613" width="2.5935%" height="15" fill="rgb(207,120,37)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="623.50">__..</text></g><g><title>__mmap64 (162,669 samples, 2.59%)</title><rect x="68.3438%" y="597" width="2.5935%" height="15" fill="rgb(227,98,0)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="607.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (162,669 samples, 2.59%)</title><rect x="68.3438%" y="581" width="2.5935%" height="15" fill="rgb(207,7,3)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="591.50">en..</text></g><g><title>do_syscall_64 (162,669 samples, 2.59%)</title><rect x="68.3438%" y="565" width="2.5935%" height="15" fill="rgb(206,98,19)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="575.50">do..</text></g><g><title>x64_sys_call (162,669 samples, 2.59%)</title><rect x="68.3438%" y="549" width="2.5935%" height="15" fill="rgb(217,5,26)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="559.50">x6..</text></g><g><title>__x64_sys_mmap (162,669 samples, 2.59%)</title><rect x="68.3438%" y="533" width="2.5935%" height="15" fill="rgb(235,190,38)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="543.50">__..</text></g><g><title>ksys_mmap_pgoff (162,669 samples, 2.59%)</title><rect x="68.3438%" y="517" width="2.5935%" height="15" fill="rgb(247,86,24)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="527.50">ks..</text></g><g><title>vm_mmap_pgoff (162,669 samples, 2.59%)</title><rect x="68.3438%" y="501" width="2.5935%" height="15" fill="rgb(205,101,16)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="511.50">vm..</text></g><g><title>do_mmap (162,669 samples, 2.59%)</title><rect x="68.3438%" y="485" width="2.5935%" height="15" fill="rgb(246,168,33)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="495.50">do..</text></g><g><title>mmap_region (162,669 samples, 2.59%)</title><rect x="68.3438%" y="469" width="2.5935%" height="15" fill="rgb(231,114,1)" fg:x="4286613" fg:w="162669"/><text x="68.5938%" y="479.50">mm..</text></g><g><title>mas_store_prealloc (82,529 samples, 1.32%)</title><rect x="69.6216%" y="453" width="1.3158%" height="15" fill="rgb(207,184,53)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="463.50"></text></g><g><title>mas_wr_store_entry.isra.0 (82,529 samples, 1.32%)</title><rect x="69.6216%" y="437" width="1.3158%" height="15" fill="rgb(224,95,51)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="447.50"></text></g><g><title>mas_wr_modify (82,529 samples, 1.32%)</title><rect x="69.6216%" y="421" width="1.3158%" height="15" fill="rgb(212,188,45)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="431.50"></text></g><g><title>mas_wr_node_store (82,529 samples, 1.32%)</title><rect x="69.6216%" y="405" width="1.3158%" height="15" fill="rgb(223,154,38)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="415.50"></text></g><g><title>call_rcu (82,529 samples, 1.32%)</title><rect x="69.6216%" y="389" width="1.3158%" height="15" fill="rgb(251,22,52)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="399.50"></text></g><g><title>__call_rcu_common (82,529 samples, 1.32%)</title><rect x="69.6216%" y="373" width="1.3158%" height="15" fill="rgb(229,209,22)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="383.50"></text></g><g><title>rcu_segcblist_enqueue (82,529 samples, 1.32%)</title><rect x="69.6216%" y="357" width="1.3158%" height="15" fill="rgb(234,138,34)" fg:x="4366753" fg:w="82529"/><text x="69.8716%" y="367.50"></text></g><g><title>_dl_map_object_from_fd (244,831 samples, 3.90%)</title><rect x="68.3438%" y="645" width="3.9035%" height="15" fill="rgb(212,95,11)" fg:x="4286613" fg:w="244831"/><text x="68.5938%" y="655.50">_dl_..</text></g><g><title>_dl_map_segments (244,831 samples, 3.90%)</title><rect x="68.3438%" y="629" width="3.9035%" height="15" fill="rgb(240,179,47)" fg:x="4286613" fg:w="244831"/><text x="68.5938%" y="639.50">_dl_..</text></g><g><title>__mprotect (82,162 samples, 1.31%)</title><rect x="70.9374%" y="613" width="1.3100%" height="15" fill="rgb(240,163,11)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82,162 samples, 1.31%)</title><rect x="70.9374%" y="597" width="1.3100%" height="15" fill="rgb(236,37,12)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="607.50"></text></g><g><title>do_syscall_64 (82,162 samples, 1.31%)</title><rect x="70.9374%" y="581" width="1.3100%" height="15" fill="rgb(232,164,16)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="591.50"></text></g><g><title>x64_sys_call (82,162 samples, 1.31%)</title><rect x="70.9374%" y="565" width="1.3100%" height="15" fill="rgb(244,205,15)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="575.50"></text></g><g><title>__x64_sys_mprotect (82,162 samples, 1.31%)</title><rect x="70.9374%" y="549" width="1.3100%" height="15" fill="rgb(223,117,47)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="559.50"></text></g><g><title>do_mprotect_pkey (82,162 samples, 1.31%)</title><rect x="70.9374%" y="533" width="1.3100%" height="15" fill="rgb(244,107,35)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="543.50"></text></g><g><title>mprotect_fixup (82,162 samples, 1.31%)</title><rect x="70.9374%" y="517" width="1.3100%" height="15" fill="rgb(205,140,8)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="527.50"></text></g><g><title>vma_modify (82,162 samples, 1.31%)</title><rect x="70.9374%" y="501" width="1.3100%" height="15" fill="rgb(228,84,46)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="511.50"></text></g><g><title>__split_vma (82,162 samples, 1.31%)</title><rect x="70.9374%" y="485" width="1.3100%" height="15" fill="rgb(254,188,9)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="495.50"></text></g><g><title>vma_complete (82,162 samples, 1.31%)</title><rect x="70.9374%" y="469" width="1.3100%" height="15" fill="rgb(206,112,54)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="479.50"></text></g><g><title>vma_interval_tree_insert (82,162 samples, 1.31%)</title><rect x="70.9374%" y="453" width="1.3100%" height="15" fill="rgb(216,84,49)" fg:x="4449282" fg:w="82162"/><text x="71.1874%" y="463.50"></text></g><g><title>_dl_name_match_p (81,247 samples, 1.30%)</title><rect x="72.2473%" y="645" width="1.2954%" height="15" fill="rgb(214,194,35)" fg:x="4531444" fg:w="81247"/><text x="72.4973%" y="655.50"></text></g><g><title>_dl_map_object_deps (481,843 samples, 7.68%)</title><rect x="67.0876%" y="709" width="7.6823%" height="15" fill="rgb(249,28,3)" fg:x="4207820" fg:w="481843"/><text x="67.3376%" y="719.50">_dl_map_obj..</text></g><g><title>_dl_catch_exception (481,843 samples, 7.68%)</title><rect x="67.0876%" y="693" width="7.6823%" height="15" fill="rgb(222,56,52)" fg:x="4207820" fg:w="481843"/><text x="67.3376%" y="703.50">_dl_catch_e..</text></g><g><title>openaux (481,843 samples, 7.68%)</title><rect x="67.0876%" y="677" width="7.6823%" height="15" fill="rgb(245,217,50)" fg:x="4207820" fg:w="481843"/><text x="67.3376%" y="687.50">openaux</text></g><g><title>_dl_map_object (481,843 samples, 7.68%)</title><rect x="67.0876%" y="661" width="7.6823%" height="15" fill="rgb(213,201,24)" fg:x="4207820" fg:w="481843"/><text x="67.3376%" y="671.50">_dl_map_obj..</text></g><g><title>open_path (76,972 samples, 1.23%)</title><rect x="73.5427%" y="645" width="1.2272%" height="15" fill="rgb(248,116,28)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="655.50"></text></g><g><title>__GI___fstatat64 (76,972 samples, 1.23%)</title><rect x="73.5427%" y="629" width="1.2272%" height="15" fill="rgb(219,72,43)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (76,972 samples, 1.23%)</title><rect x="73.5427%" y="613" width="1.2272%" height="15" fill="rgb(209,138,14)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="623.50"></text></g><g><title>do_syscall_64 (76,972 samples, 1.23%)</title><rect x="73.5427%" y="597" width="1.2272%" height="15" fill="rgb(222,18,33)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="607.50"></text></g><g><title>x64_sys_call (76,972 samples, 1.23%)</title><rect x="73.5427%" y="581" width="1.2272%" height="15" fill="rgb(213,199,7)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="591.50"></text></g><g><title>__x64_sys_newfstatat (76,972 samples, 1.23%)</title><rect x="73.5427%" y="565" width="1.2272%" height="15" fill="rgb(250,110,10)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="575.50"></text></g><g><title>__do_sys_newfstatat (76,972 samples, 1.23%)</title><rect x="73.5427%" y="549" width="1.2272%" height="15" fill="rgb(248,123,6)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="559.50"></text></g><g><title>vfs_fstatat (76,972 samples, 1.23%)</title><rect x="73.5427%" y="533" width="1.2272%" height="15" fill="rgb(206,91,31)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="543.50"></text></g><g><title>getname_flags (76,972 samples, 1.23%)</title><rect x="73.5427%" y="517" width="1.2272%" height="15" fill="rgb(211,154,13)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="527.50"></text></g><g><title>getname_flags.part.0 (76,972 samples, 1.23%)</title><rect x="73.5427%" y="501" width="1.2272%" height="15" fill="rgb(225,148,7)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="511.50"></text></g><g><title>memset_orig (76,972 samples, 1.23%)</title><rect x="73.5427%" y="485" width="1.2272%" height="15" fill="rgb(220,160,43)" fg:x="4612691" fg:w="76972"/><text x="73.7927%" y="495.50"></text></g><g><title>_dl_protect_relro (85,306 samples, 1.36%)</title><rect x="74.7699%" y="693" width="1.3601%" height="15" fill="rgb(213,52,39)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="703.50"></text></g><g><title>__mprotect (85,306 samples, 1.36%)</title><rect x="74.7699%" y="677" width="1.3601%" height="15" fill="rgb(243,137,7)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (85,306 samples, 1.36%)</title><rect x="74.7699%" y="661" width="1.3601%" height="15" fill="rgb(230,79,13)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="671.50"></text></g><g><title>do_syscall_64 (85,306 samples, 1.36%)</title><rect x="74.7699%" y="645" width="1.3601%" height="15" fill="rgb(247,105,23)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="655.50"></text></g><g><title>x64_sys_call (85,306 samples, 1.36%)</title><rect x="74.7699%" y="629" width="1.3601%" height="15" fill="rgb(223,179,41)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="639.50"></text></g><g><title>__x64_sys_mprotect (85,306 samples, 1.36%)</title><rect x="74.7699%" y="613" width="1.3601%" height="15" fill="rgb(218,9,34)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="623.50"></text></g><g><title>do_mprotect_pkey (85,306 samples, 1.36%)</title><rect x="74.7699%" y="597" width="1.3601%" height="15" fill="rgb(222,106,8)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="607.50"></text></g><g><title>mprotect_fixup (85,306 samples, 1.36%)</title><rect x="74.7699%" y="581" width="1.3601%" height="15" fill="rgb(211,220,0)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="591.50"></text></g><g><title>perf_event_mmap (85,306 samples, 1.36%)</title><rect x="74.7699%" y="565" width="1.3601%" height="15" fill="rgb(229,52,16)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="575.50"></text></g><g><title>perf_event_mmap_event (85,306 samples, 1.36%)</title><rect x="74.7699%" y="549" width="1.3601%" height="15" fill="rgb(212,155,18)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="559.50"></text></g><g><title>memset_orig (85,306 samples, 1.36%)</title><rect x="74.7699%" y="533" width="1.3601%" height="15" fill="rgb(242,21,14)" fg:x="4689663" fg:w="85306"/><text x="75.0199%" y="543.50"></text></g><g><title>__x86_cacheinfo_ifunc (84,639 samples, 1.35%)</title><rect x="76.1300%" y="661" width="1.3494%" height="15" fill="rgb(222,19,48)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="671.50"></text></g><g><title>asm_exc_page_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="645" width="1.3494%" height="15" fill="rgb(232,45,27)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="655.50"></text></g><g><title>exc_page_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="629" width="1.3494%" height="15" fill="rgb(249,103,42)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="639.50"></text></g><g><title>do_user_addr_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="613" width="1.3494%" height="15" fill="rgb(246,81,33)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="623.50"></text></g><g><title>handle_mm_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="597" width="1.3494%" height="15" fill="rgb(252,33,42)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="607.50"></text></g><g><title>__handle_mm_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="581" width="1.3494%" height="15" fill="rgb(209,212,41)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="591.50"></text></g><g><title>handle_pte_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="565" width="1.3494%" height="15" fill="rgb(207,154,6)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="575.50"></text></g><g><title>do_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="549" width="1.3494%" height="15" fill="rgb(223,64,47)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="559.50"></text></g><g><title>do_read_fault (84,639 samples, 1.35%)</title><rect x="76.1300%" y="533" width="1.3494%" height="15" fill="rgb(211,161,38)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="543.50"></text></g><g><title>filemap_map_pages (84,639 samples, 1.35%)</title><rect x="76.1300%" y="517" width="1.3494%" height="15" fill="rgb(219,138,40)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="527.50"></text></g><g><title>next_uptodate_folio (84,639 samples, 1.35%)</title><rect x="76.1300%" y="501" width="1.3494%" height="15" fill="rgb(241,228,46)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="511.50"></text></g><g><title>xas_find (84,639 samples, 1.35%)</title><rect x="76.1300%" y="485" width="1.3494%" height="15" fill="rgb(223,209,38)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="495.50"></text></g><g><title>xas_load (84,639 samples, 1.35%)</title><rect x="76.1300%" y="469" width="1.3494%" height="15" fill="rgb(236,164,45)" fg:x="4774969" fg:w="84639"/><text x="76.3800%" y="479.50"></text></g><g><title>dl_new_hash (83,761 samples, 1.34%)</title><rect x="77.4794%" y="645" width="1.3354%" height="15" fill="rgb(231,15,5)" fg:x="4859608" fg:w="83761"/><text x="77.7294%" y="655.50"></text></g><g><title>elf_machine_rela (255,006 samples, 4.07%)</title><rect x="76.1300%" y="677" width="4.0657%" height="15" fill="rgb(252,35,15)" fg:x="4774969" fg:w="255006"/><text x="76.3800%" y="687.50">elf_..</text></g><g><title>_dl_lookup_symbol_x (170,367 samples, 2.72%)</title><rect x="77.4794%" y="661" width="2.7163%" height="15" fill="rgb(248,181,18)" fg:x="4859608" fg:w="170367"/><text x="77.7294%" y="671.50">_d..</text></g><g><title>do_lookup_x (86,606 samples, 1.38%)</title><rect x="78.8149%" y="645" width="1.3808%" height="15" fill="rgb(233,39,42)" fg:x="4943369" fg:w="86606"/><text x="79.0649%" y="655.50"></text></g><g><title>check_match (86,606 samples, 1.38%)</title><rect x="78.8149%" y="629" width="1.3808%" height="15" fill="rgb(238,110,33)" fg:x="4943369" fg:w="86606"/><text x="79.0649%" y="639.50"></text></g><g><title>strcmp (86,606 samples, 1.38%)</title><rect x="78.8149%" y="613" width="1.3808%" height="15" fill="rgb(233,195,10)" fg:x="4943369" fg:w="86606"/><text x="79.0649%" y="623.50"></text></g><g><title>_dl_relocate_object (426,280 samples, 6.80%)</title><rect x="74.7699%" y="709" width="6.7964%" height="15" fill="rgb(254,105,3)" fg:x="4689663" fg:w="426280"/><text x="75.0199%" y="719.50">_dl_reloc..</text></g><g><title>elf_dynamic_do_Rela (340,974 samples, 5.44%)</title><rect x="76.1300%" y="693" width="5.4363%" height="15" fill="rgb(221,225,9)" fg:x="4774969" fg:w="340974"/><text x="76.3800%" y="703.50">elf_dyn..</text></g><g><title>elf_machine_rela_relative (85,968 samples, 1.37%)</title><rect x="80.1957%" y="677" width="1.3706%" height="15" fill="rgb(224,227,45)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="687.50"></text></g><g><title>asm_exc_page_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="661" width="1.3706%" height="15" fill="rgb(229,198,43)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="671.50"></text></g><g><title>exc_page_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="645" width="1.3706%" height="15" fill="rgb(206,209,35)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="655.50"></text></g><g><title>do_user_addr_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="629" width="1.3706%" height="15" fill="rgb(245,195,53)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="639.50"></text></g><g><title>handle_mm_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="613" width="1.3706%" height="15" fill="rgb(240,92,26)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="623.50"></text></g><g><title>__handle_mm_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="597" width="1.3706%" height="15" fill="rgb(207,40,23)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="607.50"></text></g><g><title>handle_pte_fault (85,968 samples, 1.37%)</title><rect x="80.1957%" y="581" width="1.3706%" height="15" fill="rgb(223,111,35)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="591.50"></text></g><g><title>do_wp_page (85,968 samples, 1.37%)</title><rect x="80.1957%" y="565" width="1.3706%" height="15" fill="rgb(229,147,28)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="575.50"></text></g><g><title>wp_page_copy (85,968 samples, 1.37%)</title><rect x="80.1957%" y="549" width="1.3706%" height="15" fill="rgb(211,29,28)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="559.50"></text></g><g><title>folio_remove_rmap_ptes (85,968 samples, 1.37%)</title><rect x="80.1957%" y="533" width="1.3706%" height="15" fill="rgb(228,72,33)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="543.50"></text></g><g><title>__lruvec_stat_mod_folio (85,968 samples, 1.37%)</title><rect x="80.1957%" y="517" width="1.3706%" height="15" fill="rgb(205,214,31)" fg:x="5029975" fg:w="85968"/><text x="80.4457%" y="527.50"></text></g><g><title>call_init_paths (74,876 samples, 1.19%)</title><rect x="81.5663%" y="709" width="1.1938%" height="15" fill="rgb(224,111,15)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="719.50"></text></g><g><title>_dl_init_paths (74,876 samples, 1.19%)</title><rect x="81.5663%" y="693" width="1.1938%" height="15" fill="rgb(253,21,26)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="703.50"></text></g><g><title>asm_exc_page_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="677" width="1.1938%" height="15" fill="rgb(245,139,43)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="687.50"></text></g><g><title>exc_page_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="661" width="1.1938%" height="15" fill="rgb(252,170,7)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="671.50"></text></g><g><title>do_user_addr_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="645" width="1.1938%" height="15" fill="rgb(231,118,14)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="655.50"></text></g><g><title>handle_mm_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="629" width="1.1938%" height="15" fill="rgb(238,83,0)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="639.50"></text></g><g><title>__handle_mm_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="613" width="1.1938%" height="15" fill="rgb(221,39,39)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="623.50"></text></g><g><title>handle_pte_fault (74,876 samples, 1.19%)</title><rect x="81.5663%" y="597" width="1.1938%" height="15" fill="rgb(222,119,46)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="607.50"></text></g><g><title>do_anonymous_page (74,876 samples, 1.19%)</title><rect x="81.5663%" y="581" width="1.1938%" height="15" fill="rgb(222,165,49)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="591.50"></text></g><g><title>__anon_vma_prepare (74,876 samples, 1.19%)</title><rect x="81.5663%" y="565" width="1.1938%" height="15" fill="rgb(219,113,52)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="575.50"></text></g><g><title>anon_vma_compatible (74,876 samples, 1.19%)</title><rect x="81.5663%" y="549" width="1.1938%" height="15" fill="rgb(214,7,15)" fg:x="5115943" fg:w="74876"/><text x="81.8163%" y="559.50"></text></g><g><title>init_tls (83,103 samples, 1.32%)</title><rect x="82.7601%" y="709" width="1.3250%" height="15" fill="rgb(235,32,4)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="719.50"></text></g><g><title>_dl_allocate_tls_storage (83,103 samples, 1.32%)</title><rect x="82.7601%" y="693" width="1.3250%" height="15" fill="rgb(238,90,54)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="703.50"></text></g><g><title>malloc (83,103 samples, 1.32%)</title><rect x="82.7601%" y="677" width="1.3250%" height="15" fill="rgb(213,208,19)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="687.50"></text></g><g><title>__minimal_malloc (83,103 samples, 1.32%)</title><rect x="82.7601%" y="661" width="1.3250%" height="15" fill="rgb(233,156,4)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="671.50"></text></g><g><title>__mmap64 (83,103 samples, 1.32%)</title><rect x="82.7601%" y="645" width="1.3250%" height="15" fill="rgb(207,194,5)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="655.50"></text></g><g><title>__mmap64 (83,103 samples, 1.32%)</title><rect x="82.7601%" y="629" width="1.3250%" height="15" fill="rgb(206,111,30)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (83,103 samples, 1.32%)</title><rect x="82.7601%" y="613" width="1.3250%" height="15" fill="rgb(243,70,54)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="623.50"></text></g><g><title>do_syscall_64 (83,103 samples, 1.32%)</title><rect x="82.7601%" y="597" width="1.3250%" height="15" fill="rgb(242,28,8)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="607.50"></text></g><g><title>x64_sys_call (83,103 samples, 1.32%)</title><rect x="82.7601%" y="581" width="1.3250%" height="15" fill="rgb(219,106,18)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="591.50"></text></g><g><title>__x64_sys_mmap (83,103 samples, 1.32%)</title><rect x="82.7601%" y="565" width="1.3250%" height="15" fill="rgb(244,222,10)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="575.50"></text></g><g><title>ksys_mmap_pgoff (83,103 samples, 1.32%)</title><rect x="82.7601%" y="549" width="1.3250%" height="15" fill="rgb(236,179,52)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="559.50"></text></g><g><title>vm_mmap_pgoff (83,103 samples, 1.32%)</title><rect x="82.7601%" y="533" width="1.3250%" height="15" fill="rgb(213,23,39)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="543.50"></text></g><g><title>do_mmap (83,103 samples, 1.32%)</title><rect x="82.7601%" y="517" width="1.3250%" height="15" fill="rgb(238,48,10)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="527.50"></text></g><g><title>mmap_region (83,103 samples, 1.32%)</title><rect x="82.7601%" y="501" width="1.3250%" height="15" fill="rgb(251,196,23)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="511.50"></text></g><g><title>security_vm_enough_memory_mm (83,103 samples, 1.32%)</title><rect x="82.7601%" y="485" width="1.3250%" height="15" fill="rgb(250,152,24)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="495.50"></text></g><g><title>cap_vm_enough_memory (83,103 samples, 1.32%)</title><rect x="82.7601%" y="469" width="1.3250%" height="15" fill="rgb(209,150,17)" fg:x="5190819" fg:w="83103"/><text x="83.0101%" y="479.50"></text></g><g><title>_dl_start (1,294,607 samples, 20.64%)</title><rect x="64.5951%" y="773" width="20.6406%" height="15" fill="rgb(234,202,34)" fg:x="4051485" fg:w="1294607"/><text x="64.8451%" y="783.50">_dl_start</text></g><g><title>_dl_start_final (1,294,607 samples, 20.64%)</title><rect x="64.5951%" y="757" width="20.6406%" height="15" fill="rgb(253,148,53)" fg:x="4051485" fg:w="1294607"/><text x="64.8451%" y="767.50">_dl_start_final</text></g><g><title>_dl_sysdep_start (1,294,607 samples, 20.64%)</title><rect x="64.5951%" y="741" width="20.6406%" height="15" fill="rgb(218,129,16)" fg:x="4051485" fg:w="1294607"/><text x="64.8451%" y="751.50">_dl_sysdep_start</text></g><g><title>dl_main (1,225,505 samples, 19.54%)</title><rect x="65.6968%" y="725" width="19.5389%" height="15" fill="rgb(216,85,19)" fg:x="4120587" fg:w="1225505"/><text x="65.9468%" y="735.50">dl_main</text></g><g><title>rtld_setup_main_map (72,170 samples, 1.15%)</title><rect x="84.0851%" y="709" width="1.1506%" height="15" fill="rgb(235,228,7)" fg:x="5273922" fg:w="72170"/><text x="84.3351%" y="719.50"></text></g><g><title>_start (4,616,368 samples, 73.60%)</title><rect x="12.6835%" y="789" width="73.6013%" height="15" fill="rgb(245,175,0)" fg:x="795526" fg:w="4616368"/><text x="12.9335%" y="799.50">_start</text></g><g><title>asm_exc_page_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="773" width="1.0491%" height="15" fill="rgb(208,168,36)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="783.50"></text></g><g><title>exc_page_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="757" width="1.0491%" height="15" fill="rgb(246,171,24)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="767.50"></text></g><g><title>do_user_addr_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="741" width="1.0491%" height="15" fill="rgb(215,142,24)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="751.50"></text></g><g><title>handle_mm_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="725" width="1.0491%" height="15" fill="rgb(250,187,7)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="735.50"></text></g><g><title>__handle_mm_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="709" width="1.0491%" height="15" fill="rgb(228,66,33)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="719.50"></text></g><g><title>handle_pte_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="693" width="1.0491%" height="15" fill="rgb(234,215,21)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="703.50"></text></g><g><title>do_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="677" width="1.0491%" height="15" fill="rgb(222,191,20)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="687.50"></text></g><g><title>do_read_fault (65,802 samples, 1.05%)</title><rect x="85.2357%" y="661" width="1.0491%" height="15" fill="rgb(245,79,54)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="671.50"></text></g><g><title>filemap_map_pages (65,802 samples, 1.05%)</title><rect x="85.2357%" y="645" width="1.0491%" height="15" fill="rgb(240,10,37)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="655.50"></text></g><g><title>next_uptodate_folio (65,802 samples, 1.05%)</title><rect x="85.2357%" y="629" width="1.0491%" height="15" fill="rgb(214,192,32)" fg:x="5346092" fg:w="65802"/><text x="85.4857%" y="639.50"></text></g><g><title>asm_exc_page_fault (176,377 samples, 2.81%)</title><rect x="86.2848%" y="789" width="2.8121%" height="15" fill="rgb(209,36,54)" fg:x="5411894" fg:w="176377"/><text x="86.5348%" y="799.50">as..</text></g><g><title>clap_lex::ParsedArg::to_value (85,256 samples, 1.36%)</title><rect x="89.0969%" y="789" width="1.3593%" height="15" fill="rgb(220,10,11)" fg:x="5588271" fg:w="85256"/><text x="89.3469%" y="799.50"></text></g><g><title>create_elf_tables (61,806 samples, 0.99%)</title><rect x="90.4562%" y="629" width="0.9854%" height="15" fill="rgb(221,106,17)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="639.50"></text></g><g><title>rep_movs_alternative (61,806 samples, 0.99%)</title><rect x="90.4562%" y="613" width="0.9854%" height="15" fill="rgb(251,142,44)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="623.50"></text></g><g><title>asm_exc_page_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="597" width="0.9854%" height="15" fill="rgb(238,13,15)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="607.50"></text></g><g><title>exc_page_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="581" width="0.9854%" height="15" fill="rgb(208,107,27)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="591.50"></text></g><g><title>do_user_addr_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="565" width="0.9854%" height="15" fill="rgb(205,136,37)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="575.50"></text></g><g><title>handle_mm_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="549" width="0.9854%" height="15" fill="rgb(250,205,27)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="559.50"></text></g><g><title>__handle_mm_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="533" width="0.9854%" height="15" fill="rgb(210,80,43)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="543.50"></text></g><g><title>handle_pte_fault (61,806 samples, 0.99%)</title><rect x="90.4562%" y="517" width="0.9854%" height="15" fill="rgb(247,160,36)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="527.50"></text></g><g><title>__pte_offset_map (61,806 samples, 0.99%)</title><rect x="90.4562%" y="501" width="0.9854%" height="15" fill="rgb(234,13,49)" fg:x="5673527" fg:w="61806"/><text x="90.7062%" y="511.50"></text></g><g><title>elf_load (44,161 samples, 0.70%)</title><rect x="91.4416%" y="629" width="0.7041%" height="15" fill="rgb(234,122,0)" fg:x="5735333" fg:w="44161"/><text x="91.6916%" y="639.50"></text></g><g><title>vm_munmap (44,161 samples, 0.70%)</title><rect x="91.4416%" y="613" width="0.7041%" height="15" fill="rgb(207,146,38)" fg:x="5735333" fg:w="44161"/><text x="91.6916%" y="623.50"></text></g><g><title>__vm_munmap (44,161 samples, 0.70%)</title><rect x="91.4416%" y="597" width="0.7041%" height="15" fill="rgb(207,177,25)" fg:x="5735333" fg:w="44161"/><text x="91.6916%" y="607.50"></text></g><g><title>do_vmi_munmap (44,161 samples, 0.70%)</title><rect x="91.4416%" y="581" width="0.7041%" height="15" fill="rgb(211,178,42)" fg:x="5735333" fg:w="44161"/><text x="91.6916%" y="591.50"></text></g><g><title>do_vmi_align_munmap (44,161 samples, 0.70%)</title><rect x="91.4416%" y="565" width="0.7041%" height="15" fill="rgb(230,69,54)" fg:x="5735333" fg:w="44161"/><text x="91.6916%" y="575.50"></text></g><g><title>load_elf_interp.constprop.0 (56,991 samples, 0.91%)</title><rect x="92.1457%" y="629" width="0.9086%" height="15" fill="rgb(214,135,41)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="639.50"></text></g><g><title>elf_load (56,991 samples, 0.91%)</title><rect x="92.1457%" y="613" width="0.9086%" height="15" fill="rgb(237,67,25)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="623.50"></text></g><g><title>vm_mmap (56,991 samples, 0.91%)</title><rect x="92.1457%" y="597" width="0.9086%" height="15" fill="rgb(222,189,50)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="607.50"></text></g><g><title>vm_mmap_pgoff (56,991 samples, 0.91%)</title><rect x="92.1457%" y="581" width="0.9086%" height="15" fill="rgb(245,148,34)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="591.50"></text></g><g><title>do_mmap (56,991 samples, 0.91%)</title><rect x="92.1457%" y="565" width="0.9086%" height="15" fill="rgb(222,29,6)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="575.50"></text></g><g><title>mmap_region (56,991 samples, 0.91%)</title><rect x="92.1457%" y="549" width="0.9086%" height="15" fill="rgb(221,189,43)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="559.50"></text></g><g><title>perf_event_mmap (56,991 samples, 0.91%)</title><rect x="92.1457%" y="533" width="0.9086%" height="15" fill="rgb(207,36,27)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="543.50"></text></g><g><title>perf_iterate_ctx (56,991 samples, 0.91%)</title><rect x="92.1457%" y="517" width="0.9086%" height="15" fill="rgb(217,90,24)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="527.50"></text></g><g><title>__perf_addr_filters_adjust (56,991 samples, 0.91%)</title><rect x="92.1457%" y="501" width="0.9086%" height="15" fill="rgb(224,66,35)" fg:x="5779494" fg:w="56991"/><text x="92.3957%" y="511.50"></text></g><g><title>rep_stos_alternative (51,428 samples, 0.82%)</title><rect x="93.0543%" y="629" width="0.8199%" height="15" fill="rgb(221,13,50)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="639.50"></text></g><g><title>asm_exc_page_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="613" width="0.8199%" height="15" fill="rgb(236,68,49)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="623.50"></text></g><g><title>exc_page_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="597" width="0.8199%" height="15" fill="rgb(229,146,28)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="607.50"></text></g><g><title>do_user_addr_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="581" width="0.8199%" height="15" fill="rgb(225,31,38)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="591.50"></text></g><g><title>handle_mm_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="565" width="0.8199%" height="15" fill="rgb(250,208,3)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="575.50"></text></g><g><title>__handle_mm_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="549" width="0.8199%" height="15" fill="rgb(246,54,23)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="559.50"></text></g><g><title>handle_pte_fault (51,428 samples, 0.82%)</title><rect x="93.0543%" y="533" width="0.8199%" height="15" fill="rgb(243,76,11)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="543.50"></text></g><g><title>unlock_page (51,428 samples, 0.82%)</title><rect x="93.0543%" y="517" width="0.8199%" height="15" fill="rgb(245,21,50)" fg:x="5836485" fg:w="51428"/><text x="93.3043%" y="527.50"></text></g><g><title>mprotect_fixup (21,914 samples, 0.35%)</title><rect x="93.8742%" y="613" width="0.3494%" height="15" fill="rgb(228,9,43)" fg:x="5887913" fg:w="21914"/><text x="94.1242%" y="623.50"></text></g><g><title>vma_modify (21,914 samples, 0.35%)</title><rect x="93.8742%" y="597" width="0.3494%" height="15" fill="rgb(208,100,47)" fg:x="5887913" fg:w="21914"/><text x="94.1242%" y="607.50"></text></g><g><title>vma_merge (21,914 samples, 0.35%)</title><rect x="93.8742%" y="581" width="0.3494%" height="15" fill="rgb(232,26,8)" fg:x="5887913" fg:w="21914"/><text x="94.1242%" y="591.50"></text></g><g><title>__rcu_read_unlock (21,914 samples, 0.35%)</title><rect x="93.8742%" y="565" width="0.3494%" height="15" fill="rgb(216,166,38)" fg:x="5887913" fg:w="21914"/><text x="94.1242%" y="575.50"></text></g><g><title>__x64_sys_execve (270,246 samples, 4.31%)</title><rect x="90.4562%" y="741" width="4.3087%" height="15" fill="rgb(251,202,51)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="751.50">__x64..</text></g><g><title>do_execveat_common.isra.0 (270,246 samples, 4.31%)</title><rect x="90.4562%" y="725" width="4.3087%" height="15" fill="rgb(254,216,34)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="735.50">do_ex..</text></g><g><title>bprm_execve (270,246 samples, 4.31%)</title><rect x="90.4562%" y="709" width="4.3087%" height="15" fill="rgb(251,32,27)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="719.50">bprm_..</text></g><g><title>bprm_execve.part.0 (270,246 samples, 4.31%)</title><rect x="90.4562%" y="693" width="4.3087%" height="15" fill="rgb(208,127,28)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="703.50">bprm_..</text></g><g><title>exec_binprm (270,246 samples, 4.31%)</title><rect x="90.4562%" y="677" width="4.3087%" height="15" fill="rgb(224,137,22)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="687.50">exec_..</text></g><g><title>search_binary_handler (270,246 samples, 4.31%)</title><rect x="90.4562%" y="661" width="4.3087%" height="15" fill="rgb(254,70,32)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="671.50">searc..</text></g><g><title>load_elf_binary (270,246 samples, 4.31%)</title><rect x="90.4562%" y="645" width="4.3087%" height="15" fill="rgb(229,75,37)" fg:x="5673527" fg:w="270246"/><text x="90.7062%" y="655.50">load_..</text></g><g><title>setup_arg_pages (55,860 samples, 0.89%)</title><rect x="93.8742%" y="629" width="0.8906%" height="15" fill="rgb(252,64,23)" fg:x="5887913" fg:w="55860"/><text x="94.1242%" y="639.50"></text></g><g><title>shift_arg_pages (33,946 samples, 0.54%)</title><rect x="94.2236%" y="613" width="0.5412%" height="15" fill="rgb(232,162,48)" fg:x="5909827" fg:w="33946"/><text x="94.4736%" y="623.50"></text></g><g><title>tlb_finish_mmu (33,946 samples, 0.54%)</title><rect x="94.2236%" y="597" width="0.5412%" height="15" fill="rgb(246,160,12)" fg:x="5909827" fg:w="33946"/><text x="94.4736%" y="607.50"></text></g><g><title>flush_tlb_mm_range (33,946 samples, 0.54%)</title><rect x="94.2236%" y="581" width="0.5412%" height="15" fill="rgb(247,166,0)" fg:x="5909827" fg:w="33946"/><text x="94.4736%" y="591.50"></text></g><g><title>free_pgtables (72,319 samples, 1.15%)</title><rect x="94.7649%" y="629" width="1.1530%" height="15" fill="rgb(249,219,21)" fg:x="5943773" fg:w="72319"/><text x="95.0149%" y="639.50"></text></g><g><title>mas_find (72,319 samples, 1.15%)</title><rect x="94.7649%" y="613" width="1.1530%" height="15" fill="rgb(205,209,3)" fg:x="5943773" fg:w="72319"/><text x="95.0149%" y="623.50"></text></g><g><title>tlb_finish_mmu (73,622 samples, 1.17%)</title><rect x="95.9179%" y="629" width="1.1738%" height="15" fill="rgb(243,44,1)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="639.50"></text></g><g><title>tlb_batch_pages_flush (73,622 samples, 1.17%)</title><rect x="95.9179%" y="613" width="1.1738%" height="15" fill="rgb(206,159,16)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (73,622 samples, 1.17%)</title><rect x="95.9179%" y="597" width="1.1738%" height="15" fill="rgb(244,77,30)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="607.50"></text></g><g><title>release_pages (73,622 samples, 1.17%)</title><rect x="95.9179%" y="581" width="1.1738%" height="15" fill="rgb(218,69,12)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="591.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (73,622 samples, 1.17%)</title><rect x="95.9179%" y="565" width="1.1738%" height="15" fill="rgb(212,87,7)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="575.50"></text></g><g><title>__mod_lruvec_state (73,622 samples, 1.17%)</title><rect x="95.9179%" y="549" width="1.1738%" height="15" fill="rgb(245,114,25)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (73,622 samples, 1.17%)</title><rect x="95.9179%" y="533" width="1.1738%" height="15" fill="rgb(210,61,42)" fg:x="6016092" fg:w="73622"/><text x="96.1679%" y="543.50"></text></g><g><title>__mod_lruvec_state (82,636 samples, 1.32%)</title><rect x="97.0917%" y="517" width="1.3175%" height="15" fill="rgb(211,52,33)" fg:x="6089714" fg:w="82636"/><text x="97.3417%" y="527.50"></text></g><g><title>lique_linter (6,250,389 samples, 99.65%)</title><rect x="0.0000%" y="805" width="99.6534%" height="15" fill="rgb(234,58,33)" fg:x="0" fg:w="6250389"/><text x="0.2500%" y="815.50">lique_linter</text></g><g><title>entry_SYSCALL_64_after_hwframe (576,862 samples, 9.20%)</title><rect x="90.4562%" y="789" width="9.1972%" height="15" fill="rgb(220,115,36)" fg:x="5673527" fg:w="576862"/><text x="90.7062%" y="799.50">entry_SYSCALL..</text></g><g><title>do_syscall_64 (576,862 samples, 9.20%)</title><rect x="90.4562%" y="773" width="9.1972%" height="15" fill="rgb(243,153,54)" fg:x="5673527" fg:w="576862"/><text x="90.7062%" y="783.50">do_syscall_64</text></g><g><title>x64_sys_call (576,862 samples, 9.20%)</title><rect x="90.4562%" y="757" width="9.1972%" height="15" fill="rgb(251,47,18)" fg:x="5673527" fg:w="576862"/><text x="90.7062%" y="767.50">x64_sys_call</text></g><g><title>__x64_sys_exit_group (306,616 samples, 4.89%)</title><rect x="94.7649%" y="741" width="4.8885%" height="15" fill="rgb(242,102,42)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="751.50">__x64_..</text></g><g><title>do_group_exit (306,616 samples, 4.89%)</title><rect x="94.7649%" y="725" width="4.8885%" height="15" fill="rgb(234,31,38)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="735.50">do_gro..</text></g><g><title>do_exit (306,616 samples, 4.89%)</title><rect x="94.7649%" y="709" width="4.8885%" height="15" fill="rgb(221,117,51)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="719.50">do_exit</text></g><g><title>exit_mm (306,616 samples, 4.89%)</title><rect x="94.7649%" y="693" width="4.8885%" height="15" fill="rgb(212,20,18)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="703.50">exit_mm</text></g><g><title>mmput (306,616 samples, 4.89%)</title><rect x="94.7649%" y="677" width="4.8885%" height="15" fill="rgb(245,133,36)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="687.50">mmput</text></g><g><title>__mmput (306,616 samples, 4.89%)</title><rect x="94.7649%" y="661" width="4.8885%" height="15" fill="rgb(212,6,19)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="671.50">__mmput</text></g><g><title>exit_mmap (306,616 samples, 4.89%)</title><rect x="94.7649%" y="645" width="4.8885%" height="15" fill="rgb(218,1,36)" fg:x="5943773" fg:w="306616"/><text x="95.0149%" y="655.50">exit_m..</text></g><g><title>unmap_vmas (160,675 samples, 2.56%)</title><rect x="97.0917%" y="629" width="2.5617%" height="15" fill="rgb(246,84,54)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="639.50">un..</text></g><g><title>unmap_single_vma (160,675 samples, 2.56%)</title><rect x="97.0917%" y="613" width="2.5617%" height="15" fill="rgb(242,110,6)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="623.50">un..</text></g><g><title>unmap_page_range (160,675 samples, 2.56%)</title><rect x="97.0917%" y="597" width="2.5617%" height="15" fill="rgb(214,47,5)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="607.50">un..</text></g><g><title>zap_pmd_range.isra.0 (160,675 samples, 2.56%)</title><rect x="97.0917%" y="581" width="2.5617%" height="15" fill="rgb(218,159,25)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="591.50">za..</text></g><g><title>zap_pte_range (160,675 samples, 2.56%)</title><rect x="97.0917%" y="565" width="2.5617%" height="15" fill="rgb(215,211,28)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="575.50">za..</text></g><g><title>folio_remove_rmap_ptes (160,675 samples, 2.56%)</title><rect x="97.0917%" y="549" width="2.5617%" height="15" fill="rgb(238,59,32)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="559.50">fo..</text></g><g><title>__lruvec_stat_mod_folio (160,675 samples, 2.56%)</title><rect x="97.0917%" y="533" width="2.5617%" height="15" fill="rgb(226,82,3)" fg:x="6089714" fg:w="160675"/><text x="97.3417%" y="543.50">__..</text></g><g><title>__mod_memcg_lruvec_state (78,039 samples, 1.24%)</title><rect x="98.4092%" y="517" width="1.2442%" height="15" fill="rgb(240,164,32)" fg:x="6172350" fg:w="78039"/><text x="98.6592%" y="527.50"></text></g><g><title>__set_task_comm (11,627 samples, 0.19%)</title><rect x="99.6534%" y="613" width="0.1854%" height="15" fill="rgb(232,46,7)" fg:x="6250389" fg:w="11627"/><text x="99.9034%" y="623.50"></text></g><g><title>perf_event_comm (11,627 samples, 0.19%)</title><rect x="99.6534%" y="597" width="0.1854%" height="15" fill="rgb(229,129,53)" fg:x="6250389" fg:w="11627"/><text x="99.9034%" y="607.50"></text></g><g><title>perf_event_comm_event.constprop.0 (11,627 samples, 0.19%)</title><rect x="99.6534%" y="581" width="0.1854%" height="15" fill="rgb(234,188,29)" fg:x="6250389" fg:w="11627"/><text x="99.9034%" y="591.50"></text></g><g><title>perf_event_comm_output (11,627 samples, 0.19%)</title><rect x="99.6534%" y="565" width="0.1854%" height="15" fill="rgb(246,141,4)" fg:x="6250389" fg:w="11627"/><text x="99.9034%" y="575.50"></text></g><g><title>_raw_spin_unlock (5,486 samples, 0.09%)</title><rect x="99.8388%" y="597" width="0.0875%" height="15" fill="rgb(229,23,39)" fg:x="6262016" fg:w="5486"/><text x="100.0888%" y="607.50"></text></g><g><title>intel_pmu_enable_all (2,512 samples, 0.04%)</title><rect x="99.9262%" y="549" width="0.0401%" height="15" fill="rgb(206,12,3)" fg:x="6267502" fg:w="2512"/><text x="100.1762%" y="559.50"></text></g><g><title>all (6,272,128 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(252,226,20)" fg:x="0" fg:w="6272128"/><text x="0.2500%" y="831.50"></text></g><g><title>perf-exec (21,739 samples, 0.35%)</title><rect x="99.6534%" y="805" width="0.3466%" height="15" fill="rgb(216,123,35)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21,739 samples, 0.35%)</title><rect x="99.6534%" y="789" width="0.3466%" height="15" fill="rgb(212,68,40)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="799.50"></text></g><g><title>do_syscall_64 (21,739 samples, 0.35%)</title><rect x="99.6534%" y="773" width="0.3466%" height="15" fill="rgb(254,125,32)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="783.50"></text></g><g><title>x64_sys_call (21,739 samples, 0.35%)</title><rect x="99.6534%" y="757" width="0.3466%" height="15" fill="rgb(253,97,22)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="767.50"></text></g><g><title>__x64_sys_execve (21,739 samples, 0.35%)</title><rect x="99.6534%" y="741" width="0.3466%" height="15" fill="rgb(241,101,14)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="751.50"></text></g><g><title>do_execveat_common.isra.0 (21,739 samples, 0.35%)</title><rect x="99.6534%" y="725" width="0.3466%" height="15" fill="rgb(238,103,29)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="735.50"></text></g><g><title>bprm_execve (21,739 samples, 0.35%)</title><rect x="99.6534%" y="709" width="0.3466%" height="15" fill="rgb(233,195,47)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="719.50"></text></g><g><title>bprm_execve.part.0 (21,739 samples, 0.35%)</title><rect x="99.6534%" y="693" width="0.3466%" height="15" fill="rgb(246,218,30)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="703.50"></text></g><g><title>exec_binprm (21,739 samples, 0.35%)</title><rect x="99.6534%" y="677" width="0.3466%" height="15" fill="rgb(219,145,47)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="687.50"></text></g><g><title>search_binary_handler (21,739 samples, 0.35%)</title><rect x="99.6534%" y="661" width="0.3466%" height="15" fill="rgb(243,12,26)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="671.50"></text></g><g><title>load_elf_binary (21,739 samples, 0.35%)</title><rect x="99.6534%" y="645" width="0.3466%" height="15" fill="rgb(214,87,16)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="655.50"></text></g><g><title>begin_new_exec (21,739 samples, 0.35%)</title><rect x="99.6534%" y="629" width="0.3466%" height="15" fill="rgb(208,99,42)" fg:x="6250389" fg:w="21739"/><text x="99.9034%" y="639.50"></text></g><g><title>perf_event_exec (10,112 samples, 0.16%)</title><rect x="99.8388%" y="613" width="0.1612%" height="15" fill="rgb(253,99,2)" fg:x="6262016" fg:w="10112"/><text x="100.0888%" y="623.50"></text></g><g><title>perf_event_enable_on_exec (4,626 samples, 0.07%)</title><rect x="99.9262%" y="597" width="0.0738%" height="15" fill="rgb(220,168,23)" fg:x="6267502" fg:w="4626"/><text x="100.1762%" y="607.50"></text></g><g><title>ctx_resched (4,626 samples, 0.07%)</title><rect x="99.9262%" y="581" width="0.0738%" height="15" fill="rgb(242,38,24)" fg:x="6267502" fg:w="4626"/><text x="100.1762%" y="591.50"></text></g><g><title>perf_ctx_enable (4,626 samples, 0.07%)</title><rect x="99.9262%" y="565" width="0.0738%" height="15" fill="rgb(225,182,9)" fg:x="6267502" fg:w="4626"/><text x="100.1762%" y="575.50"></text></g><g><title>x86_pmu_enable (2,114 samples, 0.03%)</title><rect x="99.9663%" y="549" width="0.0337%" height="15" fill="rgb(243,178,37)" fg:x="6270014" fg:w="2114"/><text x="100.2163%" y="559.50"></text></g><g><title>intel_pmu_enable_all (2,114 samples, 0.03%)</title><rect x="99.9663%" y="533" width="0.0337%" height="15" fill="rgb(232,139,19)" fg:x="6270014" fg:w="2114"/><text x="100.2163%" y="543.50"></text></g><g><title>native_write_msr (2,114 samples, 0.03%)</title><rect x="99.9663%" y="517" width="0.0337%" height="15" fill="rgb(225,201,24)" fg:x="6270014" fg:w="2114"/><text x="100.2163%" y="527.50"></text></g></svg></svg>